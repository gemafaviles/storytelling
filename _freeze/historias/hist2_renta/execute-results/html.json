{
  "hash": "e42387b544f0301c439dee8a88e00c6a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"¿Qué pasa con la renta municipal en España?\"\nauthor:\n  - Gema Fernández-Avilés (Gema.FAviles@uclm.es)\n  - Isidro Hidalgo (Isidro.Hidalgo@uclm.es)\nformat:\n  html:\n    theme: cerulean\n    highlight-style: ayu-mirage\n    self-contained: true\n    date: \"2024-12-29\"\n    embed-resources: true\n    toc-title: Summary\n    toc: true\n    number-sections: true\n    preview-links: auto\n    code-link: true\nnumber-sections: true\nexecute:\n  echo: true\n  eval: true\n  output: true\n  include: true\n  freeze: auto\n  fig-height: 5\n  warning: false\n  comment: \"#>\"\n  code-line-numbers: true\n  code-copy: true\n  code-overflow: scroll\n---\n\n\n\n::: {.callout-note}\nLos datos que se utilizan en esta historia están disponibles en el paquete `CDR` que puede instalarse con el siguiente comando (se comprueba si no lo está):\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!require(CDR)){\n  if (!require(remotes)) {install.packages(\"remotes\")}\n  remotes::install_github(\"cdr-book/CDR\")\n  }\n```\n:::\n\n\n\nRenta Neta per cápita (en euros) por municipios, distritos y secciones censales. Esta información se ha extraído del \"Atlas de distribución de renta de los hogares\", proporcionado por el Instituto Nacional de Estadística y ha sido procesada para facilitar el análisis. Se encuentran en el objeto `renta_municipio_data`.\n:::\n\n# ¿Qué pasa con la renta municipal en España?\n\nTrabajo en una compañía privada que quiere introducir un producto de alta gama, y me ha pedido el jefe que le haga un informe sobre la renta municipal en España de los últimos años, porque el CEO quiere ampliar el mercado a determinados tramos de renta, y necesita localizar caladeros de negocio. Me ha dicho que los datos los puedo sacar del paquete `CDR`. También me ha dicho que están limpios, pero no me fío.\n\n# Entender el contexto\n\n::: {.callout-tip}\n\n## Cómo definir el propósito y la audiencia de tu análisis\n\n¿Por qué es importante? Porque no da lo mismo analizar la renta municipal como administración que como empresario que busca oportunidades de negocio. En el primer caso, se busca entender la distribución de la renta para poder diseñar políticas públicas que reduzcan la desigualdad. Probablemente, no estamos tan interesados en los municipios más ricos, sino en los más pobres. Pero como somos gente de empresa, buscamos identificar segmentos de mercado con capacidad de compra para ofrecer un producto de alta gama, por lo que nos interesa saber dónde vive la gente con más dinero.\n\nEn cualquiera de los dos casos, lo primero es hacer un análisis exploratorio para ver si hay algo raro en los datos y analizar mínimamente las variables de interés. Y después, le vamos a preparar al jefe un par de gráficos para que vea que somos unos cracks **aportándole conocimiento**.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Configuración inicial y datos\"}\nlibrary(CDR)\nlibrary(tidyverse)\nlibrary(summarytools)\nlibrary(explore)\nlibrary(patchwork)\nlibrary(sf)\nlibrary(classInt)\n\nrellenos <- \"azure3\"\nlineales <- \"darkblue\"\n\nhead(renta_municipio_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                           Unidad  2019  2018  2017 2016 2015 codigo_ine\n1                    44001 Ababuj    NA    NA    NA   NA   NA      44001\n2      4400101 Ababuj distrito 01    NA    NA    NA   NA   NA    4400101\n3 4400101001 Ababuj sección 01001    NA    NA    NA   NA   NA 4400101001\n4                    40001 Abades 11429 10731 10314 9816 9904      40001\n5      4000101 Abades distrito 01 11429 10731 10314 9816 9904    4000101\n6 4000101001 Abades sección 01001 11429 10731 10314 9816 9904 4000101001\n```\n\n\n:::\n\n```{.r .cell-code  code-summary=\"Configuración inicial y datos\"}\nhelp(renta_municipio_data)\nstr(renta_municipio_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t55273 obs. of  7 variables:\n $ Unidad    : chr  \"44001 Ababuj\" \"4400101 Ababuj distrito 01\" \"4400101001 Ababuj sección 01001\" \"40001 Abades\" ...\n $ 2019      : int  NA NA NA 11429 11429 11429 8954 8954 8954 10791 ...\n $ 2018      : int  NA NA NA 10731 10731 10731 8589 8589 8589 10258 ...\n $ 2017      : int  NA NA NA 10314 10314 10314 8207 8207 8207 9762 ...\n $ 2016      : int  NA NA NA 9816 9816 9816 7671 7671 7671 9478 ...\n $ 2015      : int  NA NA NA 9904 9904 9904 8416 8416 8416 9116 ...\n $ codigo_ine: chr  \"44001\" \"4400101\" \"4400101001\" \"40001\" ...\n```\n\n\n:::\n:::\n\n\n\n## Limpieza (siempre hay que empezar por aquí)...\n\nVemos que hay mezcla de secciones censales, distritos y municipios. Vamos a quedarnos solo con los municipios (ya sabía yo que habría que hacer un poco de limpieza, ¡no me libro de la ciberescoba ni a tiros!)...\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrenta_municipio_data <- renta_municipio_data[substr(\n  renta_municipio_data$Unidad, 6, 6) == \" \",]\n```\n:::\n\n\n\n::: {#exr-1}\n¿Que hacemos con los datos faltantes? En este análisis eliminarlos. Veamos por qué...\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\napply(renta_municipio_data, 1, function(x) sum(is.na(x))) |>\n  table()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n   0    1    2    3    4    5 \n6424  149   56  214   55 1241 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Podríamos imputar con la mediana y salvar los registros de los municipios con 1 ó 2 faltantes, pero para visualización, ya tenemos más de 6.000 y no merecen la pena 205 más, así que eliminamos los municipios con datos faltantes:\nrenta <- renta_municipio_data |>\n   drop_na()\nhead(renta)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          Unidad  2019  2018  2017  2016  2015 codigo_ine\n1   40001 Abades 11429 10731 10314  9816  9904      40001\n2   10001 Abadía  8954  8589  8207  7671  8416      10001\n3   27001 Abadín 10791 10258  9762  9478  9116      27001\n4  48001 Abadiño 15575 14975 14724 14515 13919      48001\n5   26001 Ábalos 11910 11153  9552 10651 10775      26001\n6 30001 Abanilla  9860  9415  9044  8444  8274      30001\n```\n\n\n:::\n\n```{.r .cell-code}\n# Siempre debemos echar un vistazo rápido a los datos:\nsummary(renta)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Unidad               2019            2018            2017      \n Length:6424        Min.   : 5898   Min.   : 3719   Min.   : 5737  \n Class :character   1st Qu.: 9995   1st Qu.: 9564   1st Qu.: 9003  \n Mode  :character   Median :11428   Median :10944   Median :10330  \n                    Mean   :11611   Mean   :11143   Mean   :10569  \n                    3rd Qu.:12930   3rd Qu.:12410   3rd Qu.:11807  \n                    Max.   :26367   Max.   :30682   Max.   :30210  \n      2016            2015        codigo_ine       \n Min.   : 5163   Min.   : 3281   Length:6424       \n 1st Qu.: 8618   1st Qu.: 8446   Class :character  \n Median : 9995   Median : 9746   Mode  :character  \n Mean   :10202   Mean   : 9965                     \n 3rd Qu.:11454   3rd Qu.:11206                     \n Max.   :25957   Max.   :23861                     \n```\n\n\n:::\n\n```{.r .cell-code}\nrenta |> explore_all()\n```\n\n::: {.cell-output-display}\n![](hist2_renta_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n¡Esto ya es otra cosa! Ahora sí que podemos empezar a trabajar con datos limpios (los ingleses los llaman \"tidy data\").\n\n# Elegir una visualización adecuada\n\n::: {.callout-tip}\n## Selección de gráficos y visualizaciones que mejor representen tus datos.\n:::\n\n## Renta municipal media en España\n\n::: {#exr-2}\n¿Cuál es la renta per cápita media de los municipios españoles del último año disponible (2019)?\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(renta$`2019`)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   5898    9995   11428   11611   12930   26367 \n```\n\n\n:::\n:::\n\n\n::: {.callout-tip}\nLa renta municipal de los municipios menores de 100 habitantes es la media de la comarca agraria de todos ellos, por eso se repiten muchos valores. Si queréis analizar la renta del mundo rural... en España no se puede hacer, salvo pagando al INE el análisis:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvalores <- renta$`2019` |>\n  table()\nhead(valores[order(valores, decreasing = TRUE)], 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n11884 10793 11387 11529  8371  8678  9941  9942 10404 10532 10752 10777 11202 \n    8     6     6     6     5     5     5     5     5     5     5     5     5 \n11253 11358 11462 11582 11621 11624 12020 \n    5     5     5     5     5     5     5 \n```\n\n\n:::\n:::\n\n\n:::\n\n## Distribución de la renta por municipios\n\n::: {#exr-2}\n¿Es la renta media la misma en todos los municipios?\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrenta |>\n  select(`2019`) |>\n  descr()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDescriptive Statistics  \n2019  \nN: 6424  \n\n                        2019\n----------------- ----------\n             Mean   11611.25\n          Std.Dev    2211.72\n              Min    5898.00\n               Q1    9994.50\n           Median   11427.50\n               Q3   12930.00\n              Max   26367.00\n              MAD    2173.49\n              IQR    2934.75\n               CV       0.19\n         Skewness       0.77\n      SE.Skewness       0.03\n         Kurtosis       1.33\n          N.Valid    6424.00\n        Pct.Valid     100.00\n```\n\n\n:::\n:::\n\n\n\n¡Qué lio! Mejor un gráfico que una tabla (J. Tukey)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = renta, aes(x=`2019`)) +\n  geom_histogram() #30 bins por defecto\n```\n\n::: {.cell-output-display}\n![](hist2_renta_files/figure-html/renta-hist-1.png){width=672}\n:::\n:::\n\n\n\n¡Qué histograma más feo! Vamos a mejorarlo\n\n::: {.callout-important title=\"Tu turno\"}\n\nCompleta las partes del código señaladas por `______` o `xxx` para obtener el resultado propuesto.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_renta_2019 <- ggplot(renta, aes(`2019`)) +\n  geom_xxxxxx(col = rellenos,\n                 fill = rellenos, \n                 bins = nclass.Sturges(renta_municipio_data$`2019`)) +\n  geom_xxxxxx(aes(xintercept = mean(`2019`)),\n             color = lineales,\n             linetype = \"dashed\",\n             linewidth = 1) +\n  geom_xxxxxx(aes(x = mean(`2019`),\n                y = 100,\n                label = round(mean(`2019`), 2)),\n            color = lineales) +\n  labs(title = \"Distribución de la renta por municipios\",\n       x = \"Renta per cápita\",\n       y = \"Frecuencia\") +\n  theme_xxxxxx()\n\np_renta_2019 \n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](hist2_renta_files/figure-html/renta-hist-beauty-1.png){width=672}\n:::\n:::\n\n\n\n::: {#exr-2}\n¿Sería mejor tener un gráfico de densidad? ¿Cómo se interpretaría?\n¿Qué diferencias hay respecto al histograma?\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_renta_2019_density <- ggplot(renta, aes(`2019`)) +\n  geom_density(fill = rellenos,\n               alpha= 0.4,\n               color= rellenos,\n               lwd = 1) +\n  geom_vline(aes(xintercept = mean(`2019`)),\n             color = lineales,\n             lwd = 1,\n             linetype = \"dashed\") +\n  geom_text(aes(x = mean(`2019`),\n                y = 0.00001,\n                label = round(mean(`2019`), 2)),\n            color = lineales) +\n  labs(title = \"Distribución de la renta por municipios\",\n       x = \"Renta per cápita\",\n       y = \"Densidad\") +\n  theme_minimal() +\n  theme(axis.title.x = element_text(hjust = 0),\n        axis.title.y = element_text(hjust = 1))\n\np_renta_2019_density\n```\n\n::: {.cell-output-display}\n![](hist2_renta_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n::: {#exr-2}\n¿Cuál me gusta más? ¿Histograma o densidad? ¿Juntos?\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_renta_2019_density + \n  geom_histogram(aes(y=..density..),\n                 fill = rellenos,\n                 color= rellenos,\n                 alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](hist2_renta_files/figure-html/renta-density2-1.png){width=672}\n:::\n:::\n\n\nEn \n::: {#exr-2}\n¿Por qué no tener un 5-summary plot? ¿Qué nos dice?\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- renta |>\n  ggplot(aes(x=0, y= `2019`)) \n\nboxplot <- p + \n  geom_boxplot(color = lineales, fill = rellenos, alpha = 0.4) +\n  theme_minimal()\n\nviolin <- p + geom_violin(color = lineales, fill = rellenos,\n                          alpha = 0.4) +\n  theme_minimal()\n\nboxplot + violin\n```\n\n::: {.cell-output-display}\n![](hist2_renta_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## Evolución de la renta municipal\n\n::: {#exr-2}\n¿En los años anteriores la renta ha sido similar?\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- renta |>\n  ggplot(aes(x=0, y= `2015`))\n\np + geom_violin(aes(fill = \"2015\")) +\n  geom_violin(aes(x=1, y= `2016`, fill = \"2016\")) +\n  geom_violin(aes(x=2, y= `2017`, fill = \"2017\")) +\n  geom_violin(aes(x=3, y= `2018`, fill = \"2018\")) +\n  geom_violin(aes(x=4, y= `2019`, fill = \"2019\")) +\n  \n  # añadimos la media de cada año a los violines:\n  geom_point(aes(x=0, y=mean(`2015`)), color = \"red\") +\n  geom_point(aes(x=1, y=mean(`2016`)), color = \"red\") +\n  geom_point(aes(x=2, y=mean(`2017`)), color = \"red\") +\n  geom_point(aes(x=3, y=mean(`2018`)), color = \"red\") +\n  geom_point(aes(x=4, y=mean(`2019`)), color = \"red\") +\n  theme_minimal() +\n  scale_x_continuous(breaks = c(0, 1, 2, 3, 4),\n          labels = c(\"2015\", \"2016\", \"2017\", \"2018\", \"2019\")) +\n  labs(title = \"Distribución de la renta por municipios\",\n       x = \"Año\", y = \"Renta per cápita (euros)\")\n```\n\n::: {.cell-output-display}\n![](hist2_renta_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n# Eliminar el desorden. Enfocar la atención\n\n::: {#exr-2}\n¿Es necesario el color? ¿Queremos ver también la evolución a lo largo del tiempo? Pues quizá podemos matar dos pájaros de un tiro... veamos:\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmedias <- renta |>\n  summarise(across(`2015`:`2019`, mean, na.rm = TRUE)) |>\n  pivot_longer(cols = `2015`:`2019`,\n               names_to = \"pos\",\n               values_to = \"renta\") |>\n  mutate(pos = as.numeric(pos) - 2015)\np <- renta |>\n  ggplot(aes(x=0, y= `2015`))\n\np + geom_violin( ) +\n  geom_violin(aes(x = 0, y = `2015`), fill = rellenos, col = rellenos) +\n  geom_violin(aes(x = 1, y = `2016`), fill = rellenos, col = rellenos) +\n  geom_violin(aes(x = 2, y = `2017`), fill = rellenos, col = rellenos) +\n  geom_violin(aes(x = 3, y = `2018`), fill = rellenos, col = rellenos) +\n  geom_violin(aes(x = 4, y = `2019`), fill = rellenos, col = rellenos) +\n  \n  # añadimos la media de cada año al violín:\n  geom_point(aes(x = 0, y = mean(`2015`)), color = lineales) +\n  geom_point(aes(x = 1, y = mean(`2016`)), color = lineales) +\n  geom_point(aes(x = 2, y = mean(`2017`)), color = lineales) +\n  geom_point(aes(x = 3, y = mean(`2018`)), color = lineales) +\n  geom_point(aes(x = 4, y = mean(`2019`)), color = lineales) +\n  \n  # añadimos la línea de tendencia uniendo las medias:\n  geom_line(data = medias, aes(x = pos, y = renta, group = 1),\n            color = lineales) +\n  scale_x_continuous(breaks = c(0, 1, 2, 3, 4),\n                     labels = c(\"2015\", \"2016\", \"2017\", \"2018\", \"2019\")) +\n  scale_y_continuous(\n    labels = function(x) {\n      format(x,\n        big.mark = \".\",\n        decimal.mark = \",\", scientific = FALSE\n      )\n      }\n    ) +\n  labs(title = \"La renta per cápita sube ligeramente cada año\",\n       x = \"\", y = \"Renta per cápita (€)\") +\n  theme_minimal() +\n  theme(axis.title.x = element_text(hjust = 0),\n        axis.title.y = element_text(hjust = 1))\n```\n\n::: {.cell-output-display}\n![](hist2_renta_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n## Distribución geográfica de la renta municipal en España\n\n::: {#exr-2}\n¿Son los municipios de norte más ricos que los del sur de España en 2019?\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhelp(municipios)\n\nmunis_renta <- municipios |>\n  left_join(renta) |>   # une datasets\n  select(name, cpro, ine.prov.name, cmun,\n       `2015`,`2016`,`2017`,`2018`,`2019`) # selecciona variables\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(munis_renta) +\n  geom_sf(aes(fill = `2019`), color = NA) +\n  scale_fill_continuous(labels = function(x) {\n    format(x, big.mark = \".\", decimal.mark = \",\",\n           scientific = FALSE, suffix = \"€\"\n    )\n    }\n    ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](hist2_renta_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n## De nuevo, cuidamos el enfoque\n\nEl gráfico anterior, debido a la escala de colores continua, tiende a uniformizar los municipios, por lo que podemos dar una idea equivocada... ¡no podemos \"mentir\" con nuestras visualizaciones!\n\n¿Cómo podemos arreglarlo? Usando el **método Fisher-Jenks** para optimizar la segmentación en clases, y transformar el gráfico usando una variable discreta.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmunis_renta_clean <- munis_renta |>\n  filter(!is.na(`2019`))\n\n# crea clases con Fisher-Jenks\nfisher <- classIntervals(munis_renta_clean$`2019`,\n                         style = \"fisher\",\n                         n = 10)\nggplot(munis_renta_clean) +\n  geom_sf(aes(fill = cut(`2019`, fisher$brks)), color = NA) +\n  scale_fill_viridis_d(option= \"inferno\", direction = -1,\n                       labels= scales::label_number(suffix= \"€\")) +\n  guides(fill = guide_colorsteps()) +\n  labs(fill= \"Fisher-Jenks\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](hist2_renta_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n## Distribución por provincias\n\n::: {#exr-2}\n¿Cuál es la provincia con mayor renta media municipal en 2019? ¿Y la que menos renta media tiene?\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmunis_renta |>\n  ggplot(aes(x = `2019`, y = ine.prov.name, color = cpro)) +\n  geom_point() +\n  labs(title = \"Renta per cápita por provincia en 2019\",\n       x = \"Renta per cápita\",\n       y = \"Provincia\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](hist2_renta_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n## Una vez más, cuidamos el enfoque\n\nMejor ordenamos las provincias. Y de nuevo, ¿nos aporta el color y la distribución o nos vale con un valor medio por provincia?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmunis_renta2 <- munis_renta |>\n  group_by(ine.prov.name) |>\n  summarise(pro2019 = mean(`2019`, na.rm = TRUE)) |>\n  arrange(desc(pro2019)) |>\n  st_drop_geometry() |>\n  filter(!is.na(pro2019))\nmunis_renta2_plot <- ggplot(munis_renta2, aes(y = pro2019,\n                         x = reorder(ine.prov.name, pro2019)),\n                         color = lineales) +\n  geom_segment(aes(x= reorder(ine.prov.name, pro2019),\n                   xend = reorder(ine.prov.name, pro2019),\n                   y = 0,\n                   yend = pro2019),\n               color = lineales) +\n  geom_point() +\n  coord_flip() +\n  labs(title = \"Renta per cápita por provincia en 2019\",\n       x = \"Renta per cápita\",\n       y = \"Provincia\") +\n  theme_minimal()\nmunis_renta2_plot\n```\n\n::: {.cell-output-display}\n![](hist2_renta_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n# Contar una historia\n\n::: {.callout-tip}\n## Cómo narrar una historia convincente con tus datos.\n\nHasta ahora hemos visto el **planteamiento**, en el que proporcionamos el contexto: trabajamos para una empresa que quiere posicionar un producto de alta gama...\n\nEl análisis exploratorio de las variables, de forma aislada o combinada, nos introduce en la **trama**, donde descubrimos aspectos interesantes de nuestros datos: la renta es asimétrica, con **municipios de más renta**, que es lo que nos interesa. Además, vemos que la **renta tiende a subir con los años**, lo que también nos viene de perlas.\n\nPero como siempre, lo más importante es el **desenlace**, donde le estamos dando a nuestro jefe las claves que necesita:\n\n-   Con el gráfico de evolución de la distribución le damos 2 claves: **hay municipios de mayor renta**, y **la renta tiende a subir con el tiempo**.\n\n-   Gráficos de localización de los municipios de mayor renta: podríamos usar el **mapa de distribución de la renta en España** o el **lollipop de provincias ordenado por renta**.\n:::\n\n## Para pensar:\n\nSupongamos que el producto fuera de primera necesidad, su producción ligada al territorio y la renta no fuera la variable decisoria. ¿Qué visualización utilizarías en el desenlace, el lollipop de renta por provincias o el de distribución municipal por provincias?\n\n::: {.callout-pista}\npista: logística\n:::",
    "supporting": [
      "hist2_renta_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}