{
  "hash": "236bf9eeec1a04be380a18430b44c2f2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Storytelling visual con R: primera clase\"\nsubtitle: \"Curso formativo para el PDI. Universidad de Castilla-La Mancha\"\nauthor:   \n  - name: Gema Fern√°ndez-Avil√©s \n    email: gema.faviles@uclm.es\n  - name: Isidro Hidalgo\n    email: isidro.hidalgo@uclm.es \ndate: \"2025-03-04\"\nformat:\n  html:\n    theme: cerulean\n    highlight-style: ayu-mirage\n    self-contained: true\n    lang: es\n    date-format: long\n    embed-resources: true\n    toc-title: Summary\n    toc: true\n    number-sections: true\n    preview-links: auto\n    code-link: true\nnumber-sections: true\nexecute:\n  echo: true\n  eval: true\n  output: true\n  include: true\n  freeze: auto\n  fig-height: 5\n  warning: false\n  comment: \"#>\"\n  code-line-numbers: true\n  code-copy: true\n  code-overflow: scroll\n---\n\n\n\n\n\n::: {.callout-warning}\n## IMPORTANTE\n\n**Como buen estudiante que eres, sabr√°s lo importante que es trabajar de forma aut√≥noma y venir a clase con el material le√≠do**. \n:::\n\n\n# Unidad 1. üõ† Toolkit del curso: R, RStudio y Quarto\n\nEl objetivo de esta unidad es presentar **R**, **RStudio** y **Quarto**, herramientas imprescindibles, que utilizar√° a lo largo del curso.\n\n\n## Prerrequisitos  \n\nSe asume que has revisado las Unidad 1 \"Toolkit del curso: R, RStudio y Quarto\" y que tienes instalado y funcionando todo lo propuesto en la Unidad O \"Calentando motores\".\n\n## Terminolog√≠a\n\nYa hemos utilizado algunos t√©rminos nuevos, as√≠ que vamos a definirlos antes de continuar.\n\n- **R:** Nombre del lenguaje de programaci√≥n que utilizaremos a lo largo del curso.\n\n- **RStudio:** Entorno de desarrollo integrado para R.\n    En otras palabras, una interfaz conveniente para escribir y ejecutar c√≥digo R.\n\n- **Quarto:** Sistema de publicaci√≥n cient√≠fica y t√©cnica de c√≥digo abierto basado en Pandoc.\nCrea y publique art√≠culos, informes, presentaciones, sitios web, blogs y libros de alta calidad en HTML, PDF, MS Word, ePub, etc., incluyendo ecuaciones, citas, referencias cruzadas, paneles de figuras, llamadas, dise√±o avanzado y mucho m√°s.\n\n- **Proyecto:** Un proyecto es un directorio de trabajo (carpeta) que contiene todo lo necesario para trabajar en un an√°lisis de datos (proyecto) espec√≠fico. Tipos de proyectos: documentos, presentaciones, paquetes, Webs.\n\n## Empezar despacio\n\nA medida que avanza el curso, se anima al estudiante a explorar m√°s all√° de lo que dictan las clases.\nSin embargo, antes de llegar a esa etapa, se necesita adquirir cierta fluidez b√°sica en **R**.\nEn primer lugar, comprobemos que el proyecto que hemos creado funciona perfectamente. En el debemos trabajar todo el curso.\n\n`File > New Project > New Directory > Quarto Project > Poner nombre y seleccionar directorio`\n\nEstructura de carpetas dentro del proyecto:\n\n* üìÇ `data`\n\n* üìÇ `img`\n\n::: {.callout-note}\n## Quarto\n\nRecuerda que en la **Unidad 1** del curso tienes todo lo necesario para realizar la Tarea 1. \n\nUna gu√≠a detallada sobre Quarto en RStudio est√° disponible en el siguiente enlace: <https://quarto.org/docs/get-started/hello/rstudio.html>\n\n:::\n\n\n# Unidad 2: üöë La importancia del contexto\n\n## Manos a la obra \n\n::: {.callout-note}\n## R: nuestro contexto\n\nNosotros vamos a contar historias con los datos usando el software \nestad√≠stico **R** por lo que es necesario conocer algunos paquetes y funciones\npara poder manipular y representar los datos.\n:::\n\n## Toma toda la ayuda que te presten: `dplyr :: Cheatsheet`\n\n<https://rstudio.github.io/cheatsheets/translations/spanish/data-transformation_es.pdf>\n\n- Datos **tidy**: ordenados\n- Cada fila es una **observaci√≥n**\n- Cada columna es una **variable**\n- **pipes**` x |> f(y)` ser√° `f(x,y)`\n\n\n## El conjunto de datos `starwars`\n\n![**Fuente: https://datasciencebox.org**](img/starwars-dataset.png){width=\"50%\"}\n\n\n\n\n## Nuestra filosof√≠a: *learning by doing*\n\n\n1. Cargamos los datos `starwars` contenidos en el paquete `dplyr`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"dplyr\")\nstarwars\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 87 √ó 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n 1 Luke Sk‚Ä¶    172    77 blond      fair       blue            19   male  mascu‚Ä¶\n 2 C-3PO       167    75 <NA>       gold       yellow         112   none  mascu‚Ä¶\n 3 R2-D2        96    32 <NA>       white, bl‚Ä¶ red             33   none  mascu‚Ä¶\n 4 Darth V‚Ä¶    202   136 none       white      yellow          41.9 male  mascu‚Ä¶\n 5 Leia Or‚Ä¶    150    49 brown      light      brown           19   fema‚Ä¶ femin‚Ä¶\n 6 Owen La‚Ä¶    178   120 brown, gr‚Ä¶ light      blue            52   male  mascu‚Ä¶\n 7 Beru Wh‚Ä¶    165    75 brown      light      blue            47   fema‚Ä¶ femin‚Ä¶\n 8 R5-D4        97    32 <NA>       white, red red             NA   none  mascu‚Ä¶\n 9 Biggs D‚Ä¶    183    84 black      light      brown           24   male  mascu‚Ä¶\n10 Obi-Wan‚Ä¶    182    77 auburn, w‚Ä¶ fair       blue-gray       57   male  mascu‚Ä¶\n# ‚Ñπ 77 more rows\n# ‚Ñπ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n```\n\n\n:::\n:::\n\n\n\n\n2. ¬øCu√°ntas columnas (variables) tiene?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nncol(starwars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 14\n```\n\n\n:::\n:::\n\n\n\n3. ¬øCu√°ntas filas (observaciones) tiene?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(starwars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 87\n```\n\n\n:::\n:::\n\n\n\n4. ¬øCu√°l es la dimensi√≥n del dataset?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(starwars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 87 14\n```\n\n\n:::\n:::\n\n\n\n\n5. ¬øC√≥mo extraer una **variable** del `data.frame`? \n\nOpci√≥n 1: formato tidy\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnombre_dataframe |> select(nombre_variable)\n```\n:::\n\n\n\nOpci√≥n 2: Con el operador `$`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnombre_dataframe$nombre_variable\n```\n:::\n\n\n\n::: {.callout-important title=\"Tu turno\"}\nSelecciona la variable `name` del conjunto de datos `starwars`.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Tu c√≥digo R aqu√≠\n```\n:::\n\n\n\n6. Para asignar \"algo\" (la variable `name`) a \"algo\" (el objeto `sw_name`) se utiliza el operador `<-`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsw_name <- starwars$name\n```\n:::\n\n\n\n\n::: {.callout-note}\nEl operador `<-` asigna al \"s√≠mbolo\" que hay a su izquierda el resultado\nde la expresi√≥n que hay a su derecha. El operador `=` funciona \"igual\" que `<-`. \n:::\n\nCompleta las partes del c√≥digo se√±aladas por `_____` o `xxxxx` para obtener el resultado propuesto. ¬øTe acuerdas de las funciones para explorar todas las variables a la vez?\n\n\n7. ¬øComo extraer una observaci√≥n del conjunto de datos?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnombre_dataframe|>\n  filter(nombre_variable == \"nombre_observacion\")\n```\n:::\n\n\n\n::: {.callout-important title=\"Tu turno\"}\nSelecciona una observaci√≥n (el bueno), `Luke Skywalker`, filtrando por el nombre en la variable `name` del conjunto `starwars`\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Tu c√≥digo R aqu√≠\n```\n:::\n\n\n\n\n8. Exploraci√≥n del dataset `starwars` de un **vistazo** (con la funci√≥n `skim()` de la librer√≠a `skimr`):\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskimr::skim(starwars)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |         |\n|:------------------------|:--------|\n|Name                     |starwars |\n|Number of rows           |87       |\n|Number of columns        |14       |\n|_______________________  |         |\n|Column type frequency:   |         |\n|character                |8        |\n|list                     |3        |\n|numeric                  |3        |\n|________________________ |         |\n|Group variables          |None     |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|name          |         0|          1.00|   3|  21|     0|       87|          0|\n|hair_color    |         5|          0.94|   4|  13|     0|       11|          0|\n|skin_color    |         0|          1.00|   3|  19|     0|       31|          0|\n|eye_color     |         0|          1.00|   3|  13|     0|       15|          0|\n|sex           |         4|          0.95|   4|  14|     0|        4|          0|\n|gender        |         4|          0.95|   8|   9|     0|        2|          0|\n|homeworld     |        10|          0.89|   4|  14|     0|       48|          0|\n|species       |         4|          0.95|   3|  14|     0|       37|          0|\n\n\n**Variable type: list**\n\n|skim_variable | n_missing| complete_rate| n_unique| min_length| max_length|\n|:-------------|---------:|-------------:|--------:|----------:|----------:|\n|films         |         0|             1|       24|          1|          7|\n|vehicles      |         0|             1|       11|          0|          2|\n|starships     |         0|             1|       16|          0|          5|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|   mean|     sd| p0|   p25| p50|   p75| p100|hist  |\n|:-------------|---------:|-------------:|------:|------:|--:|-----:|---:|-----:|----:|:-----|\n|height        |         6|          0.93| 174.60|  34.77| 66| 167.0| 180| 191.0|  264|‚ñÇ‚ñÅ‚ñá‚ñÖ‚ñÅ |\n|mass          |        28|          0.68|  97.31| 169.46| 15|  55.6|  79|  84.5| 1358|‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñÅ |\n|birth_year    |        44|          0.49|  87.57| 154.69|  8|  35.0|  52|  72.0|  896|‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñÅ |\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n# Unidad 3. üìä La elecci√≥n de un gr√°fico efectivo: From data to viz\n\n\n## ¬øC√≥mo visualizar con la funci√≥n `ggplot()` del paquete `ggplot`?\n\n1. Cargamos el paquete `ggplot`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n:::\n\n\n\n\n2. Trabajamos con la funci√≥n `ggplot()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = nuestro_dataset, \n       mapping = aes(x = x-variable, y = y-variable)) +\n   geom_xxx() +\n   otras opciones\n```\n:::\n\n\n\n\n## ¬øC√≥mo describir√≠as la relaci√≥n entre la masa (`mass`) y la altura (`height`) de los personajes de Starwars (`starwars`)? \n\n\n\n## Paso a paso  üêæ\n\n**Paso üêæ1.** El primer argumento de `ggplot()` es el conjunto de datos que se utilizar√° en el gr√°fico \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(data = starwars) \n```\n\n::: {.cell-output-display}\n![](lab_session1_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n**Paso üêæ2.** Indicamos a `ggplot()` c√≥mo se representar√° visualmente la informaci√≥n de nuestros datos. El argumento `mapping` de la funci√≥n ggplot() define c√≥mo se asignan las variables del conjunto de datos a las propiedades visuales (est√©ticas) del gr√°fico. \n\nLa funci√≥n `aes()`, y los argumentos `x` e `y` de aes() especifican qu√© variables mapear a los ejes x e y. Asignaremos `height` a la est√©tica `x` y `mass` a la est√©tica `y`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars,\n       mapping = aes(x = height, y = mass)) \n```\n\n::: {.cell-output-display}\n![](lab_session1_files/figure-html/starwars2-2-1.png){width=672}\n:::\n:::\n\n\n\n\n**Paso üêæ3.** Necesitamos definir un **geom**: el objeto geom√©trico que un gr√°fico utiliza para representar los datos. Estos objetos geom√©tricos est√°n disponibles en `ggplot2` con funciones que empiezan por **geom_**.\n\nLos gr√°ficos de barras utilizan `geom_bar()`, los gr√°ficos de l√≠neas utilizan `geom_line()`, los boxplots utilizan `geom_boxplot()`, los scatterplots utilizan `geom_point()`, etc.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars,\n       mapping = aes(x = height, y = mass)) + \n  geom_point() \n```\n\n::: {.cell-output-display}\n![](lab_session1_files/figure-html/starwars2-3-1.png){width=672}\n:::\n:::\n\n\n\n\n**Paso üêæ4.** A√±ade la variable `gender` en `aes()` para visualizar el g√©nero de cada observaci√≥n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour = gender)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](lab_session1_files/figure-html/starwars2-4-1.png){width=672}\n:::\n:::\n\n\n\n\n\n**Paso üêæ5.** A√±adimos t√≠tulo al gr√°fico: \"Mass vs. height of Starwars characters\" \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour =gender)) +\n  geom_point() +\n  labs(title = \"Mass vs. height of Starwars characters\")\n```\n\n::: {.cell-output-display}\n![](lab_session1_files/figure-html/starwars2-5-1.png){width=672}\n:::\n:::\n\n\n\n\n**Paso üêæ6.** A√±adimos el subt√≠tulo \"by gender\"\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour = gender)) +\n  geom_point() +\n  labs(title = \"Mass vs. height of Starwars characters\",\n       subtitle = \"by gender\")\n```\n\n::: {.cell-output-display}\n![](lab_session1_files/figure-html/starwars2-6-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n**Paso üêæ7.** Etiquetamos los ejes x e y como con las siguiente expresiones: x = \"Height (cm)\", y = \"Weight (kg)\", respectivamente.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour = gender)) +\n  geom_point() +\n  labs(title = \"Mass vs. height of Starwars characters\",\n       subtitle = \"by gender\",\n       x = \"Height (cm)\", y = \"Weight (kg)\")\n```\n\n::: {.cell-output-display}\n![](lab_session1_files/figure-html/starwars2-7-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n**Paso üêæ8.** Ahora, etiquetamos la leyenda con la expresi√≥n: \"Species\".\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour = gender)) +\n  geom_point() +\n  labs(title = \"Mass vs. height of Starwars characters\",\n       subtitle = \"by gender\",\n       x = \"Height (cm)\", y = \"Weight (kg)\",\n       colour = \"Gender\")\n```\n\n::: {.cell-output-display}\n![](lab_session1_files/figure-html/starwars2-8-1.png){width=672}\n:::\n:::\n\n\n\n\n**Paso üêæ9.** A√±adimos la fuente de los datos, el paquete `dplyr`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour = gender)) +\n  geom_point() +\n  labs(title = \"Mass vs. height of Starwars characters\",\n       subtitle = \"by gender\",\n       x = \"Height (cm)\", y = \"Weight (kg)\",\n       colour = \"Gender\",\n       caption = \"Source: dplyr package\")\n```\n\n::: {.cell-output-display}\n![](lab_session1_files/figure-html/starwars2-9-1.png){width=672}\n:::\n:::\n\n\n\n\n**Paso üêæ10.** Finalmente, usamos paleta con una escala de colores discreta que est√° dise√±ada para ser percibida por espectadores con formas comunes de daltonismo, `scale_colour_viridis_d()`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour = gender)) +\n  geom_point() +\n  labs(title = \"Mass vs. height of Starwars characters\",\n       subtitle = \"by gender\",\n       x = \"Height (cm)\", y = \"Weight (kg)\",\n       colour = \"Gender\",\n       caption = \"Source: dplyr package\")  +\n  scale_colour_viridis_d()\n```\n\n::: {.cell-output-display}\n![](lab_session1_files/figure-html/starwars2-10-1.png){width=672}\n:::\n:::\n\n\n\n\n\n## Aesthetics (est√©tica) üéØ  {background-color=\"#017eae\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour = xxxxx,\n                     shape = xxxxx,\n                     size = xxxxx,\n                     alpha = xxxxx)\n       ) +\n  geom_point()\n```\n:::\n",
    "supporting": [
      "lab_session1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}