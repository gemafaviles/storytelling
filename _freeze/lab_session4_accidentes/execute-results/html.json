{
  "hash": "a33b4b49005b240c3016d3312e6d157c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Storytelling visual con R\"\nsubtitle: \"¿Cómo y dónde se producen los accidentes en Madrid?\"\nauthor:   \n  - name: Gema Fernández-Avilés \n    email: gema.faviles@uclm.es\n  - name: Isidro Hidalgo\n    email: isidro.hidalgo@uclm.es \ndate: \"2025-03-04\"\nformat:\n  html:\n    theme: cerulean\n    highlight-style: ayu-mirage\n    self-contained: true\n    lang: es\n    date-format: long\n    embed-resources: true\n    toc-title: Summary\n    toc: true\n    number-sections: true\n    preview-links: auto\n    code-link: true\nnumber-sections: true\nexecute:\n  echo: true\n  eval: true\n  output: true\n  include: true\n  freeze: auto\n  fig-height: 5\n  warning: false\n  comment: \"#>\"\n  code-line-numbers: true\n  code-copy: true\n  code-overflow: scroll\n---\n\n\n\n\n\n::: {.callout-warning}\n## IMPORTANTE\n\n**Como buen estudiante que eres, sabrás lo importante que es trabajar de forma autónoma y venir a clase con el material leído 😊**. \n:::\n\n\n\n\n\n::: {.callout-note}\nLos datos que se utilizan en esta historia están disponibles en el paquete `CDR` que puede instalarse con el siguiente comando (se comprueba si no lo está):\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Instalación y/o carga del paquete `CDR`\"}\nif (!require(CDR)){\n  if (!require(remotes)) {install.packages(\"remotes\")}\n  remotes::install_github(\"cdr-book/CDR\")\n  }\n```\n:::\n\n\n\nAccidentes de tráfico en la Ciudad de Madrid registrados por Policía Municipal con víctimas y/o daños al patrimonio en el 2020. Los datos se han descargado del [Portal de datos abiertos del Ayuntamiento de Madrid.](https://datos.madrid.es/portal/site/egob/menuitem.c05c1f754a33a9fbe4b2e4b284f1a5a0/?vgnextoid=7c2843010d9c3610VgnVCM2000001f4a900aRCRD&vgnextchannel=374512b9ace9f310VgnVCM100000171f5a0aRCRD&vgnextfmt=default))\n:::\n\n# Cómo y dónde se producen los accidentes en Madrid\n\nEsta mañana estaba tan tranquilo en mi oficina (trabajo en el distrito de Chamartín para el Ayuntamiento) y me sueltan de repente: \"el jefe quiere verte\". Lo primero que he pensado es que me echaban, como soy un poco \"cansa almas\"... Pero no, entro en el despacho del jefe... ¡Y allí está Almeida! Que ha oído que he hecho un curso de visualización en la UCLM y me he convertido en un crack de la visualización. Yo no sabía donde meterme, pero he mantenido perfectamente la compostura, como un profesional.\n\nAsí que ya me ha ido contando que está muy preocupado con los accidentes y quiere analizar el tema, para buscar soluciones. Que me agradecería mucho si encontramos dónde está el problema, para bajar el número y gravedad de los accidentes en la ciudad. El problema, me dice, es que solo me puede facilitar los datos del año 2020. Ya le he avisado de que es un año muy particular, por el estado de alarma, pero algo sacaremos...\n\n# Entender el contexto\n\n::: {.callout-tip}\n## Cómo definir el propósito y la audiencia de tu análisis\n\n¿Qué le interesa al alcalde? Bajar la tasa de accidentes. Pero desde el punto de vista de la visualización, está claro que va a necesitar información georreferenciada, por lo que haremos mapas. Por otro lado, seguro que la dimensión es importante, porque no es lo mismo Madrid en agosto que un día de lluvia en calendario escolar...\n\nEn cualquier caso, lo primero es hacer un análisis exploratorio para ver si hay algo raro en los datos y analizar mínimamente las variables de interés. Y después, le vamos a preparar los gráficos necesarios para **aportarle conocimiento** sobre los accidentes en la ciudad.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Configuración inicial y datos\"}\nlibrary(CDR)               # Carga el paquete CDR para la lectura de datos\nlibrary(tidyverse)         # Manipulación y visualización de datos\nlibrary(sf)                # Para trabajar con datos espaciales\nlibrary(mapSpain)          # Para obtener y visualizar mapas de España\nlibrary(tidyterra)         # Para trabajar con datos espaciales y raster\nlibrary(lubridate)         # Manipulación de fechas y horas\nlibrary(data.table)        # Para manipulación eficiente de datos\nlibrary(gplots)            # Carga el paquete gplots para crear gráficos avanzados\nlibrary(RColorBrewer)      # Carga el paquete RColorBrewer para paletas de colores\nlibrary(leaflet)           # Carga el paquete leaflet para crear mapas interactivos\nlibrary(leaflet.extras)    # Carga el paquete leaflet.extras para funcionalidades adicionales en leaflet\nlibrary(ggmosaic)          # Carga el paquete ggmosaic para crear gráficos de mosaico\n```\n:::\n\n\n\n# Elegir una visualización adecuada\n\n::: {.callout-tip}\n## Selección de gráficos y visualizaciones que mejor representen tus datos.\n:::\n\n\n## Almeida quiere saber cómo y dónde se producen los accidentes en Madrid\n\n::: {#exr-1}\n¿Dónde se han producido los accidentes de tráfico en Madrid en el 2020?\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"primer mapa\"}\ndata(accidentes2020_data)\nhead(accidentes2020_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   num_expediente      fecha     hora\n           <char>     <char>   <char>\n1:    2019S040008 07/09/2020 23:00:00\n2:    2019S040008 07/09/2020 23:00:00\n3:    2020S000001 01/01/2020  1:15:00\n4:    2020S000001 01/01/2020  1:15:00\n5:    2020S000002 01/01/2020  1:20:00\n6:    2020S000002 01/01/2020  1:20:00\n                                   localizacion numero            distrito\n                                         <char> <char>              <char>\n1:                    CALL. SAN MAXIMILIANO, 38     38       CIUDAD LINEAL\n2:                    CALL. SAN MAXIMILIANO, 38     38       CIUDAD LINEAL\n3: AVDA. CANILLEJAS A VICALVARO / CALL. SILFIDE      1 SAN BLAS-CANILLEJAS\n4: AVDA. CANILLEJAS A VICALVARO / CALL. SILFIDE      1 SAN BLAS-CANILLEJAS\n5:                            CALL. SILVANO, 31     31           HORTALEZA\n6:                            CALL. SILVANO, 31     31           HORTALEZA\n                 tipo_accidente estado_meteorológico tipo_vehiculo tipo_persona\n                         <char>               <char>        <char>       <char>\n1: Choque contra obstáculo fijo            Despejado       Turismo    Conductor\n2: Choque contra obstáculo fijo            Despejado VMU eléctrico    Conductor\n3:      Colisión fronto-lateral                 NULL       Turismo    Conductor\n4:      Colisión fronto-lateral                 NULL       Turismo    Conductor\n5: Choque contra obstáculo fijo            Despejado       Turismo    Conductor\n6: Choque contra obstáculo fijo            Despejado       Turismo     Pasajero\n        rango_edad   sexo lesividad coordenada_x_utm coordenada_y_utm\n            <char> <char>    <char>            <num>            <num>\n1: De 21 a 24 años Hombre      NULL         444597.8          4475156\n2: De 25 a 29 años  Mujer      NULL         444597.8          4475156\n3: De 18 a 20 años Hombre      NULL         447710.6          4477156\n4: De 30 a 34 años Hombre      NULL         447710.6          4477156\n5: De 21 a 24 años Hombre      NULL         445076.3          4478372\n6: De 40 a 44 años Hombre      NULL         445076.3          4478372\n   positiva_alcohol positiva_droga\n             <char>         <char>\n1:                N           NULL\n2:                N           NULL\n3:                N           NULL\n4:                S           NULL\n5:                N           NULL\n6:                N           NULL\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"primer mapa\"}\nggplot(data = accidentes2020_data,                          # Crea un gráfico con el dataset accidentes2020_data\n       aes(x = coordenada_x_utm, y = coordenada_y_utm)) +   # x= coordenada_x_utm e y= coordenada_y_utm  \n  geom_point() +                                            # Añade puntos al gráfico para cada observación \n  coord_fixed()                                             # Mantiene una relación fija entre las unidades del eje x y el eje y\n```\n\n::: {.cell-output-display}\n![](lab_session4_accidentes_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n## El desorden es tu enemigo\n\nDeja mucho que desear, ¿verdad?: no tenemos información, solo unos datos representados en un gráfico. Con muy poco, tirando de estética (reduciendo la dimensión de los puntos para que se vea el fondo) y alguna referencia geográfica (en forma de mapa de carreteras), veremos cómo se reduce la carga cognitiva:\n\n### Paso 1: # Convierte el dataset accidentes2020_data a un objeto `sf`\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidentes2020_sf <- st_as_sf(accidentes2020_data,     \n  coords = c(\"coordenada_x_utm\", \"coordenada_y_utm\"),  # Define las columnas de coordenadas UTM\n  crs = 25830                                          # Establece el sistema de referencia de coordenadas a ETRS89/UTM zona 30N, usado en Europa\n)\n```\n:::\n\n\n\n### Paso 2: Obtiene datos del municipio de Madrid con la función `esp_get_munic` de la libreíra `mapSpain`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmadrid <- esp_get_munic(munic = \"^Madrid$\") |>    # Obtiene los datos del municipio de Madrid\n  st_transform(25830)                             # Transforma las coordenadas al sistema de referencia ETRS89/UTM zona 30N\n\n# Descarga una imagen de un mapa estático de las carreteras de Madrid\ntile <- esp_getTiles(madrid, \"IDErioja\", zoommin = 2)\n```\n:::\n\n\n\n### Paso 3: Primer mapa mejorado\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +                                     # Inicia un gráfico vacío con ggplot\n  geom_spatraster_rgb(data = tile) +           # Añade la imagen del mapa estático como fondo\n  geom_sf(data = accidentes2020_sf,            # Añade los datos de accidentes como puntos en el mapa\n    col = \"blue\", size = 0.05, alpha = 0.3) +  # Define el color, tamaño y transparencia de los puntos\n  coord_sf(expand = FALSE) +                   # Mantiene las proporciones de las coordenadas sin expansión\n  labs(title = \"¿Dónde se producen los accidentes de tráfico en Madrid?\")   \n```\n\n::: {.cell-output-display}\n![](lab_session4_accidentes_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n\n¡Esto ya es otra cosa! Apreciamos, lógicamente, la concentración de accidentes en el centro de la ciudad y, especialmente, en las arterias principales.\n\n## El cuándo\n\nAdemás, como hemos comentado, tenemos conocimiento *a priori* sobre la influencia de la fecha en el aumento de tráfico, por lo que probablemente encontremos alguna influencia de la dimensión temporal. Vamos a verlo...\n\n::: {#exr-2}\n¿Cuándo se han producido los accidentes? \n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"primer gráfico del cuándo\"}\nggplot(data = accidentes2020_data,\n       aes(x = fecha, y = hora)) + \n  geom_point() +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](lab_session4_accidentes_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::",
    "supporting": [
      "lab_session4_accidentes_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}