{
  "hash": "0dae9b06577a90309b567d0fd6a5a332",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Storytelling visual con R\"\nsubtitle: \"Curso formativo para el PDI. Universidad de Castilla-La Mancha\"\nauthor:   \n  - name: Gema Fern√°ndez-Avil√©s \n    email: gema.faviles@uclm.es\n  - name: Isidro Hidalgo\n    email: isidro.hidalgo@uclm.es \n#date: \"2024-12-10\"\nbibliography: biblio.bib\nformat:\n  revealjs:\n    theme: theme-dds.scss\n    scrollable: true\n    toc-title: Index\n    toc: false\n    slide-number: c/t\n    fig-align: center\n    show-slide-number: all\n    transition: fade\n    background-transition: fade\n    height: 900\n    width: 1600\n    fontcolor: \"#262d36\"\n    highlight-style: ayu-mirage\n    multiplex: true\n    embed-resources: true\n    code-overflow: scroll\n  pdf:\n    toc: true\n    number-sections: true\n    colorlinks: true\n    out-width: \"50%\"\ncode-link: true\nexecute:\n  code-overflow: scroll\n  echo: true\n  freeze: auto\n  eval: true\n  fig-height: 6\n  warning: false\n  code-fold: true\n  comment: \"#>\"\n  code-line-numbers: true\n  code-copy: true\n---\n\n\n\n\n\n#  {#title-slide data-menu-title=\"Storytelling con R\" aria-label=\"dddd.\"}\n\n<!-- background-image=\"img/r-giralda2.png\" -->\n\n[Unidad 2]{.custom-title-1} [La importancia del contexto]{.custom-title-2} \n<!-- [Gema Fern√°ndez-Avil√©s Calder√≥n<br> Universidad de Castilla-La Mancha]{.custom-author} -->\n[La importancia del contexto]{.custom-author}\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n# Agenda\n\n1.  Objetivos de aprendizaje\n\n2.  Resultados esperados\n\n3.  Conceptos clave \n\n4.  ¬øQu√© hemos aprendido?\n\n\n\n# 1. Objetivos de aprendizaje üéØ {background-color=\"black\"}\n\n- Subrayar la importancia del contexto.\n\n- Conectar los datos con la historia.\n\n- Mostrar c√≥mo el contexto influye en la visualizaci√≥n.\n\n- Evitar manipulaciones no intencionadas.\n\n\n\n# 2. Resultados esperados  üèÖ {background-color=\"#017eae\"}\n\n![](img/05-luke-skywalker.png){width=\"60%\"}\n\n\n# 3. Conceptos clave üìù {background-color=\"#AB5484\"}\n\n\n## An√°lisis exploratorio frente a an√°lisis explicativo\n\n![**Tipos de an√°lisis**. Fuente: @knaflic2019storytelling**](img/u2-context-eda-expl.png){width=\"60%\"}\n\n- El an√°lisis **exploratorio**: es lo que se hace para comprender los datos y averiguar\nqu√© puede ser digno de menci√≥n o interesante para otros.\n[**El an√°lisis exploratorio es como buscar perlas en las ostras.**]{style=\"color:red\"}\n\n- El an√°lisis **explicativo**: es lo que se hace para explicar los datos a otros.\n[**El an√°lisis explicativo es como hacer joyas con las perlas.**]{style=\"color:red\"}\n\n\n## Cuestiones clave\n\n![**¬øD√≥nde empezamos?**. Fuente: @knaflic2019storytelling](img/u2-context-www.png){width=\"60%\"}\n\n\n\n## ¬øC√≥mo nos comunicamos con el p√∫blico?\n\n![**Communication mechanism continuum**. Fuente: @knaflic2019storytelling](img/u2-context-on-off-line.png){width=\"60%\"}\n\n\n## ¬øC√≥mo organizamos el contexto?\n\n\n+ [**Historia en 3‚Äêminutos**:]{style=\"color:red\"}: Si s√≥lo dispusieras de tres minutos para decirle a su p√∫blico lo que necesita saber, ¬øqu√© le dir√≠as?\n\n+ [**La gran idea**:]{style=\"color:red\"} la Gran Idea reduce el \"qu√©\" a√∫n m√°s: a una sola frase.\n\n+ [**Storyboard o representaci√≥n visual de la historias**:]{style=\"color:red\"} una serie de im√°genes que representan las escenas clave de la historia.\n\n\n<!-- # Antes de seguir: la clave üìÉ {background-color=\"#AB5484\"} -->\n\n\n# El contexto en **R**: `tidyverse` {background-color=\"#AB5484\"}\n\n\n- Conocer qu√© es el `tidyverse` y los datos `tidy`\n    \n- Descubrir las acciones (`verbos`) de \\{dplyr\\}.\n\n- Aprender a visualizar datos con \\{`ggplot2`\\}.\n\n\n# Tidy data üìÉ {background-color=\"#017eae\"}\n\n## ¬øQu√© significa tidy? ¬øCu√°l de estas dos im√°genes es m√°s tidy?\n\n![**Imagen tomada de: iStock**](img/08-tidy-ropa.png){width=\"60%\"}\n\n## ¬°Acertaste!\n![**Imagen adaptada de: iStock**](img/08-tidy-ropa-text.png){width=\"60%\"}\n\n\n\n## Caracter√≠sticas de los datos tidy\n\n+ Cada variable forma una columna.\n\n+ Cada observaci√≥n forma una fila.\n\n+ Cada tipo de unidad de observaci√≥n forma una tabla.\n\n![**Fuente: @wickham2016r**](img/08-tidy-data-tabla.png){width=\"15%\"}\n\n\n\n\n# The grammar of data wrangling: \\{tidyverse\\} üöß {background-color=\"#017eae\"} \n\n::: columns\n::: {.column width=\"50%\"}\n![**Fuente: Allison Horst**](img/08-tidyverse.png){width=\"80%\"} \n:::\n\n::: {.column width=\"50%\"}\n![**Fuente: https://r4ds.had.co.nz/**](img/08-r4ds.png){width=\"50%\"}   \n:::\n:::\n\n## [**Tidyverse**:]{style=\"color:red\"} {.smaller}\n\nEs una colecci√≥n de paquetes coehrentes, que\n    comparten gram√°tica, filosof√≠a y estructura y est√°n dise√±ados para\n    realizar juntos como una canalizaci√≥n completa (*pipeline*). Todos\n    se basan en la idea de *tidy data* propuesta por Hadley Wickham\n    @hadley2014tidy y pueden instalarse con un √∫nico comando en R:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"tidyverse\")\n```\n:::\n\n\n\n\n    \n\nLos paquetes que forman parte del tidyverse son:\n\n-    **\\{readr\\}**, para importaci√≥n de datos.\n\n-   **\\{dplyr\\}**, para manipulaci√≥n de datos.\n\n-   **\\{tidyr\\}**, para ordenar datos.\n\n-   **\\{ggplot2\\}**, para visualizaci√≥n de datos.\n\n-   **\\{purrr\\}**, para programaci√≥n.\n\n-   **\\{tibble\\}**, para `tibbles`, un nuevo formato de `data frames`.\n\n-   **\\{stringr\\}**, para caracteres.\n\n-   **\\{forcats\\}**, para factores.\n\n\n\n# El operador pipe üìÑ {background-color=\"#017eae\"}\n\n## ¬øQu√© es un pipe?\n\nEn programaci√≥n, un pipe (tubo) es una t√©cnica que permite pasar informaci√≥n de un \nproceso a otro.\n\n![Fuente: https://static-bcrf.biochem.wisc.edu/courses/Tabular-data-analysis-with-R-and-Tidyverse/book/8-tidyverseanotherRuniverse.html](img/08-pipe-tuberia.png){width=\"30%\"} \n\n## ¬øC√≥mo funciona el pipe de forma intuitiva?\n\n\nImagina la siguiente secuencia:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(i) find keys, (ii) unlock car, (iii) start car, (iv) drive to work y (v) park.\n```\n:::\n\n\n\n\n\nExpresado como un cojunto de funciones anidadas y pseudo-c√≥digo **R** podr√≠a ser as√≠:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npark(drive(start_car(unlock(find(\"keys\"))), to = \"work\"))\n```\n:::\n\n\n\n\n\nUtilizando pipes la lectura se hace m√°s f√°cil y natural:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfind(\"keys\") |>\n  unlock_car() |>\n  start_car() |>\n  drive(to = \"work\") |>\n  park()\n```\n:::\n\n\n\n\n\n\n# Transformaci√≥n de datos con `dplyr` {background-color=\"#017eae\"}\n\n::: columns\n\n::: {.column width=\"20%\"}\n\n![**Fuente: https://dplyr.tidyverse.org/**](img/08-dplyr-logo.png)\n:::\n\n::: {.column width=\"80%\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nfilas:\n  filter() filtra casos en funci√≥n de sus valores.\n  arrange() cambia el orden de las filas.\n\ncolumnas:\n  select() elige variables en funci√≥n de sus nombres.\n\ntransformaci√≥n:\n  summarise() reduce m√∫ltiples valores a un solo resumen.\n  mutate() agrega nuevas variables que son funciones de variables existentes.\n\nagrupaci√≥n:\n  group_by() agrupa datos por una o m√°s variables.\n```\n:::\n\n\n\n\n:::\n\n:::\n\n\n\n## Importante: Cheatsheets en **R**  \n\n>[[**Cheatsheets**]{style=\"color:blue\"}](https://posit.co/resources/cheatsheets/)\n\n\n![**Fuente: https://posit.co/resources/cheatsheets/**](img/u2-context-cheatsheet.png)\n\n\n## Manos a la obra {background-color=\"black\"}\n\n::: {.callout-note}\nNosotros vamos a contar historias con los datos usando el software \nestad√≠stico **R** por lo que es necesario conocer algunos paquetes y funciones\npara poder manipular y represenar los datos.\n:::\n\n¬øQu√© hay en un conjunto de datos?  \n\n![**Mapa del universo observable con los objetos astron√≥micos notables conocidos en la actualidad. Fuente: Wikipedia.**](img/05-universo.png){width=\"50%\"}\n\n## El conjunto de datos `starwars`\n\n![**Fuente: https://datasciencebox.org**](img/starwars-dataset.png){width=\"50%\"}\n\n## Terminolog√≠a (com√∫n)\n\n- Cada fila es una **observaci√≥n**\n- Cada columna es una **variable**\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"dplyr\")\nstarwars\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 87 √ó 14\n  name      height  mass hair_color skin_color eye_color birth_year sex   gender\n  <chr>      <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n1 Luke Sky‚Ä¶    172    77 blond      fair       blue            19   male  mascu‚Ä¶\n2 C-3PO        167    75 <NA>       gold       yellow         112   none  mascu‚Ä¶\n3 R2-D2         96    32 <NA>       white, bl‚Ä¶ red             33   none  mascu‚Ä¶\n4 Darth Va‚Ä¶    202   136 none       white      yellow          41.9 male  mascu‚Ä¶\n5 Leia Org‚Ä¶    150    49 brown      light      brown           19   fema‚Ä¶ femin‚Ä¶\n6 Owen Lars    178   120 brown, gr‚Ä¶ light      blue            52   male  mascu‚Ä¶\n# ‚Ñπ 81 more rows\n# ‚Ñπ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n## Tablas de datos (data.frames)\n\n+ Cada columna: variable (cuantitativa o cualitativa).\n\n+ Cada fila:  elemento  observado las caracter√≠sticas que representan las variables. \n\n+ La forma m√°s com√∫n: `data.frame`. \n      \n+ Para extraer una variable del `data.frame` se utiliza el operador `$`: `nombre_dataframe$nombre_variable`.\n\n+ Cada columna del `data.frame` es un `vector` (otra estructura de datos). \n\n\n\n## Algunas cuestiones b√°sicas\n\n¬øCu√°ntas columnas (variables) tiene?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nncol(starwars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 14\n```\n\n\n:::\n:::\n\n\n\n\n¬øCu√°ntas filas (observaciones) tiene?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(starwars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 87\n```\n\n\n:::\n:::\n\n\n\n\n¬øCu√°l es la dimensi√≥n del dataset?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(starwars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 87 14\n```\n\n\n:::\n:::\n\n\n\n\n\n## Tablas de datos (`data.frames`)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# la funci√≥n head() muestra los primeros valores\nhead(starwars, 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 √ó 14\n  name      height  mass hair_color skin_color eye_color birth_year sex   gender\n  <chr>      <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n1 Luke Sky‚Ä¶    172    77 blond      fair       blue              19 male  mascu‚Ä¶\n2 C-3PO        167    75 <NA>       gold       yellow           112 none  mascu‚Ä¶\n3 R2-D2         96    32 <NA>       white, bl‚Ä¶ red               33 none  mascu‚Ä¶\n# ‚Ñπ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsw_name<-starwars$name\n```\n:::\n\n\n\n\n\n::: {.callout-note}\nEl operador `<-` asigna al \"s√≠mbolo\" que hay a su izquierda el resultado\nde la expresi√≥n que hay a su derecha. El operador `=` funciona igual que `<-`. \n:::\n\n## Una observaci√≥n (el bueno): **Luke Skywalker**\n\n![**Fuente: https://datasciencebox.org**](img/05-luke-skywalker.png){width=\"50%\"}\n\n\n\n## Exploraci√≥n del dataset `starwars`  \n\nDe un **vistazo** (con la funci√≥n `glimpse()`):\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskimr::skim(starwars)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |         |\n|:------------------------|:--------|\n|Name                     |starwars |\n|Number of rows           |87       |\n|Number of columns        |14       |\n|_______________________  |         |\n|Column type frequency:   |         |\n|character                |8        |\n|list                     |3        |\n|numeric                  |3        |\n|________________________ |         |\n|Group variables          |None     |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|name          |         0|          1.00|   3|  21|     0|       87|          0|\n|hair_color    |         5|          0.94|   4|  13|     0|       11|          0|\n|skin_color    |         0|          1.00|   3|  19|     0|       31|          0|\n|eye_color     |         0|          1.00|   3|  13|     0|       15|          0|\n|sex           |         4|          0.95|   4|  14|     0|        4|          0|\n|gender        |         4|          0.95|   8|   9|     0|        2|          0|\n|homeworld     |        10|          0.89|   4|  14|     0|       48|          0|\n|species       |         4|          0.95|   3|  14|     0|       37|          0|\n\n\n**Variable type: list**\n\n|skim_variable | n_missing| complete_rate| n_unique| min_length| max_length|\n|:-------------|---------:|-------------:|--------:|----------:|----------:|\n|films         |         0|             1|       24|          1|          7|\n|vehicles      |         0|             1|       11|          0|          2|\n|starships     |         0|             1|       16|          0|          5|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|   mean|     sd| p0|   p25| p50|   p75| p100|hist  |\n|:-------------|---------:|-------------:|------:|------:|--:|-----:|---:|-----:|----:|:-----|\n|height        |         6|          0.93| 174.60|  34.77| 66| 167.0| 180| 191.0|  264|‚ñÇ‚ñÅ‚ñá‚ñÖ‚ñÅ |\n|mass          |        28|          0.68|  97.31| 169.46| 15|  55.6|  79|  84.5| 1358|‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñÅ |\n|birth_year    |        44|          0.49|  87.57| 154.69|  8|  35.0|  52|  72.0|  896|‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñÅ |\n\n\n:::\n:::\n\n\n\n\n\n\n## ¬øQu√© conozco sobre Luke Skywalker (el bueno)?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# tidy\nstarwars|>\n  filter(name==\"Luke Skywalker\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 √ó 14\n  name      height  mass hair_color skin_color eye_color birth_year sex   gender\n  <chr>      <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n1 Luke Sky‚Ä¶    172    77 blond      fair       blue              19 male  mascu‚Ä¶\n# ‚Ñπ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n# 4. ¬øQu√© hemos aprendido? üìñ {background-color=\"black\"}\n\n+ La importancia del contexto en la comunicaci√≥n.\n\n+ Nociones b√°sicas para manipular datos en **R**.\n\n+ Homework: cumplimentar la hoja de trabajo.\n\n\n\n# Nuestra filosof√≠a üìñ: *learning by doing* {background-color=\"#AB5484\"}\n\n\n+ Recuerda que los ordenadores actualmente no son inteligentes.\n\n+ Filosof√≠a: `copy, paste, and tweak`.\n\n+ La mejor forma de aprender c√≥digo es haci√©ndolo.\n\n+ La pr√°ctica es la clave.\n\n\n\n## Referencias \n\n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}