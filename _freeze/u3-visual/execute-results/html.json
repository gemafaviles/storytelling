{
  "hash": "be20c4a71fb9710e727932e6c737dee3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Storytelling visual con R\"\nsubtitle: \"Curso formativo para el PDI. Universidad de Castilla-La Mancha\"\nauthor:   \n  - name: Gema Fern√°ndez-Avil√©s \n    email: Gema.FAviles@uclm.es\n  - name: Isidro Hidalgo\n    email: Isidro.Hidalgo@uclm.es \n#date: \"2025-03-09\"\nbibliography: biblio.bib\nformat:\n  revealjs:\n    theme: theme-dds.scss\n    scrollable: true\n    toc-title: Index\n    toc: false\n    slide-number: c/t\n    logo: img/logos_finan.png\n    fig-align: center\n    show-slide-number: all\n    transition: fade\n    background-transition: fade\n    height: 900\n    width: 1600\n    fontcolor: \"#262d36\"\n    highlight-style: ayu-mirage\n    multiplex: true\n    embed-resources: true\n    code-overflow: scroll\n  pdf:\n    toc: true\n    number-sections: true\n    colorlinks: true\n    out-width: \"50%\"\ncode-link: true\nexecute:\n  code-overflow: scroll\n  echo: true\n  freeze: auto\n  eval: true\n  fig-height: 6\n  warning: false\n  code-fold: true\n  comment: \"#>\"\n  code-line-numbers: true\n  code-copy: true\n---\n\n\n\n\n\n#  {#title-slide data-menu-title=\"Storytelling con R\" aria-label=\"dddd.\"}\n\n<!-- background-image=\"img/r-giralda2.png\" -->\n\n[Unidad 3]{.custom-title-1} [La elecci√≥n de un gr√°fico efectivo.]{.custom-title-2} \n<!-- [Gema Fern√°ndez-Avil√©s Calder√≥n<br> Universidad de Castilla-La Mancha]{.custom-author} -->\n[*From data to viz* ]{.custom-author}\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n# Agenda\n\n1.  Objetivos de aprendizaje\n\n2.  Resultados esperados\n\n3.  Conceptos clave \n\n4.  ¬øQu√© hemos aprendido?\n\n\n\n# 1. Objetivos de aprendizaje üéØ {background-color=\"black\"}\n\n- Comprender la importancia de la visualizaci√≥n\n\n- Representaciones con \\{`ggplot2`\\}\n\n\n\n\n# 2. Resultados esperados  üèÖ {background-color=\"#017eae\"}\n\n![**Hexbin plot (starwars data)**](img/07-rdo-esp.png){width=\"60%\"}\n\n\n# 3. Conceptos clave üìÑ {background-color=\"#AB5484\"}\n\n\n# ¬øPor qu√© es importante la visualizaci√≥n? üñº {background-color=\"#017eae\"}\n\n>[**\"The simple graph has brought more information to the data analyst's mind than any other device.\" --- John Tukey**]{style=\"color:white\"} \n\n\n\n## DatasauRus  {.smaller}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(datasauRus)\nlibrary(dplyr)\n\ndatasaurus_dozen |> \n    group_by(dataset) |> \n    summarize(\n      mean_x    = mean(x),\n      mean_y    = mean(y),\n      std_dev_x = sd(x),\n      std_dev_y = sd(y),\n      corr_x_y  = cor(x, y)\n    )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 √ó 6\n  dataset  mean_x mean_y std_dev_x std_dev_y corr_x_y\n  <chr>     <dbl>  <dbl>     <dbl>     <dbl>    <dbl>\n1 away       54.3   47.8      16.8      26.9  -0.0641\n2 bullseye   54.3   47.8      16.8      26.9  -0.0686\n3 circle     54.3   47.8      16.8      26.9  -0.0683\n4 dino       54.3   47.8      16.8      26.9  -0.0645\n5 dots       54.3   47.8      16.8      26.9  -0.0603\n6 h_lines    54.3   47.8      16.8      26.9  -0.0617\n# ‚Ñπ 7 more rows\n```\n\n\n:::\n:::\n\n\n\n\n## DatasauRus  \n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/datasauRus-visualiza-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n::: {.callout-note}\nOtros ejemplos cl√°sicos son el cuarteto de Anscombe y la paradoja de Simpson.\n:::\n\n\n\n## ¬øC√≥mo describir√≠as la relaci√≥n entre la masa y la altura de los personajes de Starwars? \n\n<!-- ![**Imagen tomada de https://datasciencebox.org**](img/07-sw-plot.png){width=\"60%\"} -->\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nggplot(data = starwars, mapping = aes(x = height, y = mass)) +\n  geom_point() \n```\n\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n<!-- ## ¬øExiste alg√∫n outlier? {.smaller} -->\n\n<!-- ::: columns -->\n\n<!-- ::: {.column width=\"50%\"} -->\n\n<!-- ```{r sw-outlier-jabba, fig.show = \"hide\", warning = FALSE} -->\n<!-- library(ggplot2) -->\n<!-- library(dplyr) -->\n\n<!-- ggplot(data = starwars, -->\n<!--        mapping = aes(x = height, y = mass)) + -->\n<!--   geom_point() -->\n<!-- ``` -->\n\n<!-- ::: -->\n\n<!-- ::: {.column width=\"50%\"} -->\n\n<!-- ```{r ref.label = \"sw-outlier-jabba\", echo = FALSE, warning = FALSE, out.width = \"100%\", fig.width = 8} -->\n<!-- ``` -->\n<!-- ::: -->\n<!-- ::: -->\n\n  \n## ¬øQui√©n es el *outlier*? Jabba Desilijic Tiure\n\n![**Imagen adaptada de https://datasciencebox.org**](img/07-jabba.png){width=\"60%\"}\n\n\n\n\n# \"The grammar of graphics\": \\{`ggplot`\\} {background-color=\"black\"}\n\n![**Imagen adaptada de https://datasciencebox.org**](img/07-ggplot2-book.png){width=\"60%\"}\n\n+ \\{`ggplot2`\\} es un paquete `tidyverse` para visualizaci√≥n de datos.\n\n+ **gg** en `ggplot2` hace referencia a *Grammar of Graphics.*\n\n+ Inspirado en el libro *Grammar of Graphics*, @wilkinson2012grammar.\n\n\n## ¬øC√≥mo visualizar con la funci√≥n `ggplot()` de \\{`ggplot`\\}?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = [dataset], \n       mapping = aes(x = [x-variable], y = [y-variable])) +\n   geom_xxx() +\n   otras opciones\n```\n:::\n\n\n\n\n\n**Ahora, de verdad:**\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)  #cargamos los datos 'starwars'\n# se crea un nuevo data.frame sin el outlier (que se elimina)\nstarwars2 <- filter(starwars, name != \"Jabba Desilijic Tiure\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars2, mapping = aes(x = height, y = mass)) +\n  geom_point() +\n  labs(title = \"Mass vs. height of Starwars characters\",\n       x = \"Height (cm)\", y = \"Weight (kg)\")\n```\n:::\n\n\n\n\n>Ayuda con ggplot2: [ggplot2.tidyverse.org](ggplot2.tidyverse.org) y Cheatsheets.\n\n## Mi primer plot con `ggplot()` \n\n::: columns\n::: {.column width=\"50%\"}\n\n![**Fuente: Wikipedia**](img/07-sw-logo.png){width=\"100%\"}\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/ggplot-pract2-1.png){width=960}\n:::\n:::\n\n\n\n:::\n:::\n\n\n\n# Paso a paso  üêæ {background-color=\"#017eae\"}\n\n---\n\n## Paso a paso: {.smaller}\n\n**Empezamos con el data.frame `starwars2`**\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1\"}\nggplot(data = starwars2) \n```\n:::\n\n\n\n:::\n\n\n::: {.column width=\"50%\"}\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-3-1.png){width=100%}\n:::\n:::\n\n\n\n\n:::\n:::\n\n\n## Paso a paso: {.smaller}\n\nEmpezamos con el data.frame `starwars2`  \n**ponemos `height` en el eje-x**\n\n\n::: columns \n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(data = starwars2,\n       mapping = aes(x = height))\n```\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-4-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n## Paso a paso: {.smaller}\n\nEmpezamos con el data.frame `starwars2`  \nponemos `height` en el eje-x  \n**ponemos `mass` en el eje-y**  \n\n\n::: columns \n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = starwars2,\n       mapping = aes(x = height,\n                     y = mass)) \n```\n:::\n\n\n\n:::\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-5-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n---\n\n\n## Paso a paso:  {.smaller}\n\nEmpezamos con el data.frame `starwars2`  \nponemos `height` en el eje-x  \nponemos `mass` en el eje-y  \n**representamos cada observaci√≥n con un punto**  \n\n\n::: columns \n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = starwars2,\n       mapping = aes(x = height,\n                     y = mass)) + \n  geom_point() \n```\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-6-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n---\n\n## Paso a paso: {.smaller}\n\nEmpezamos con el data.frame `starwars2`  \nponemos `height` en el eje-x  \nponemos `mass` en el eje-y  \nrepresentamos cada observaci√≥n con un punto  \n**y la variable `gender` para el color de cada punto**  \n\n\n::: columns \n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = starwars2,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour = gender)) + \n  geom_point()\n```\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-7-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n---\n\n## Paso a paso: {.smaller}\n\nEmpezamos con el data.frame `starwars2`  \nponemos `height` en el eje-x  \nponemos `mass` en el eje-y  \nrepresentamos cada observaci√≥n con un punto  \ny la variable `gender` para el color de cada punto.  \n**A√±adimos t√≠tulo al gr√°fico: \"Mass vs. height of Starwars characters\"**  \n\n\n::: columns \n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(data = starwars2,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour =gender)) +\n  geom_point() +\n  labs(title = \"Mass vs. height of Starwars characters\")\n```\n:::\n\n\n\n:::\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-8-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n---\n\n## Paso a paso: {.smaller}\n\nEmpezamos con el data.frame `starwars2`  \nponemos `height` en el eje-x  \nponemos `mass` en el eje-y  \nrepresentamos cada observaci√≥n con un punto  \ny la variable `gender` para el color de cada punto.  \nA√±adimos t√≠tulo al gr√°fico: \"Mass vs. height of Starwars characters\"  \n**a√±adimos el subt√≠tulo \"by gender\"**  \n\n\n::: columns \n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(data = starwars2,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour = gender)) +\n  geom_point() +\n  labs(title = \"Mass vs. height of Starwars characters\",\n       subtitle = \"by gender\")  \n```\n:::\n\n\n\n:::\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-9-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n---\n\n## Paso a paso:  {.smaller}\n\n\nEmpezamos con el data.frame `starwars2`  \nponemos `height` en el eje-x  \nponemos `mass` en el eje-y  \nrepresentamos cada observaci√≥n con un punto  \ny la variable `gender` para el color de cada punto.  \nA√±adimos t√≠tulo al gr√°fico: \"Mass vs. height of Starwars characters\"  \na√±adimos el subt√≠tulo \"G√©nero de los personajes de starwars2\"  \n**etiquetamos los ejes x e y como \"x = \"Height (cm)\", y = \"Weight (kg)\", respectivamente**  \n\n\n::: columns \n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(data = starwars2,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour = gender)) +\n  geom_point() +\n  labs(title = \"Mass vs. height of Starwars characters\",\n       subtitle = \"by gender\",  \n       x = \"Height (cm)\", y = \"Weight (kg)\")\n```\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-10-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n---\n\n## Paso a paso: {.smaller}\n\n\nEmpezamos con el data.frame `starwars2`  \nponemos `height` en el eje-x  \nponemos `mass` en el eje-y  \nrepresentamos cada observaci√≥n con un punto  \ny la variable `gender` para el color de cada punto.  \nA√±adimos t√≠tulo al gr√°fico: \"Mass vs. height of Starwars characters\"  \na√±adimos el subt√≠tulo \"G√©nero de los personajes de starwars2\"  \netiquetamos los ejes x e y como \"x = \"Height (cm)\", y = \"Weight (kg)\", respectivamente  \n**etiquetamos la leyenda \"Species\"**\n\n\n::: columns \n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(data = starwars2,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour = gender)) +\n  geom_point() +\n  labs(title = \"Mass vs. height of Starwars characters\",\n       subtitle = \"by gender\",  \n       x = \"Height (cm)\", y = \"Weight (kg)\",\n       colour = \"Gender\") \n```\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-11-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n---\n\n## Paso a paso:  {.smaller}\n\n\nEmpezamos con el data.frame `starwars2`  \nponemos `height` en el eje-x  \nponemos `mass` en el eje-y  \nrepresentamos cada observaci√≥n con un punto  \ny la variable `gender` para el color de cada punto.  \nA√±adimos t√≠tulo al gr√°fico: \"Mass vs. height of Starwars characters\"  \na√±adimos el subt√≠tulo \"G√©nero de los personajes de starwars2\"  \netiquetamos los ejes x e y como \"x = \"Height (cm)\", y = \"Weight (kg)\",   \netiquetamos la leyenda \"Gender\"  \n**a√±adimos la fuente de los datos.**  \n\n\n::: columns \n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(data = starwars2,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour = gender)) +\n  geom_point() +\n  labs(title = \"Mass vs. height of Starwars characters\",\n       subtitle = \"by gender\",  \n       x = \"Height (cm)\", y = \"Weight (kg)\",\n       colour = \"Gender\",\n       caption = \"Source: dplyr package\") \n```\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-12-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n---\n\n## Paso a paso: {.smaller}\n\nEmpezamos con el data.frame `starwars2`  \nponemos `height` en el eje-x  \nponemos `mass` en el eje-y  \nrepresentamos cada observaci√≥n con un punto  \ny la variable `gender` para el color de cada punto.  \nA√±adimos t√≠tulo al gr√°fico: \"Mass vs. height of Starwars characters\"  \na√±adimos el subt√≠tulo \"G√©nero de los personajes de starwars2\"  \netiquetamos los ejes x e y como \"x = \"Height (cm)\", y = \"Weight (kg)\",   \netiquetamos la leyenda \"Gender\"  \na√±adimos la fuente de los datos.  \n**Finalmente, usamos paleta con una escala de colores discreta que est√° dise√±ada para ser percibida por espectadores con formas comunes de daltonismo.**  \n\n\n::: columns \n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"11\"}\nggplot(data = starwars2,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour = gender)) +\n  geom_point() +\n  labs(title = \"Mass vs. height of Starwars characters\",\n       subtitle = \"by gender\",  \n       x = \"Height (cm)\", y = \"Weight (kg)\",\n       colour = \"Gender\",\n       caption = \"Source: dplyr package\")  +\n  scale_colour_viridis_d()\n```\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-13-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n\n# Aesthetics (est√©tica) üéØ  {background-color=\"#017eae\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars2,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour = xxxxx,\n                     shape = xxxxx,\n                     size = xxxxx,\n                     alpha = xxxxx)\n       ) +\n  geom_point() \n```\n:::\n\n\n\n\n\n# ¬øCu√°l es la mejor representaci√≥n gr√°fica? üéØ  {background-color=\"#017eae\"}\n\n# ¬øC√≥mo son mis datos? ü§î  \n\n# Un mundo de posibilidades ü§î \n\n>[[**From data to viz project**]{style=\"color:blue\"}](https://www.data-to-viz.com/)\n\n![**√Årbol de clasificaci√≥n de gr√°ficos seg√∫n el tipo de datos**](img/03-visual-from-data-to-viz.png){width=\"60%\"}\n\n\n\n# 2. Distribuci√≥n üéØ  {background-color=\"#017eae\"}\n\n\n## Recursos interesantes\n\n::: columns\n::: {.column width=\"33%\"}\n\n![https://r-graph-gallery.com/boxplot.html](img/07-gallery.png){width=\"100%\"}\n\n[**The R graph gallery**](https://r-graph-gallery.com/)\n:::\n\n::: {.column width=\"33%\"}\n\n![https://r-charts.com/](img/07-rchart.png){width=\"100%\"}\n\n[**R charts**](https://r-charts.com/)\n:::\n\n::: {.column width=\"33%\"}\n\n![https://exts.ggplot2.tidyverse.org/gallery/](img/07-ggplot-ext.png){width=\"100%\"}\n\n[**Extensiones \\{ggplot2\\}**](https://exts.ggplot2.tidyverse.org/gallery/)\n:::\n:::\n\n\n\n\n# Nuestra filosof√≠a üìñ: learning by doing {background-color=\"#AB5484\"}\n\n\n+ Recuerda que los ordenadores actualmente no son inteligentes.\n\n+ Filosof√≠a: `copy, paste, and tweak`\n\n+ La mejor forma de aprender c√≥digo es haci√©ndolo.\n\n+ La pr√°ctica es la clave\n\n\n\n# 4. Conceptos clave üìñ {background-color=\"black\"}\n\n\n+ \\{ggplot2\\}.\n\n+ `geom_xxx()`.\n\n\n# Referencias \n\n\n\n\n\n\n\n\n",
    "supporting": [
      "u3-visual_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}