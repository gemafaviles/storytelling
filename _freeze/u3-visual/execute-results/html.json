{
  "hash": "672536f8971d8c71e7747fc577a27ad2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Storytelling visual con R\"\nsubtitle: \"Curso formativo para el PDI. Universidad de Castilla-La Mancha\"\nauthor:   \n  - name: Gema Fern√°ndez-Avil√©s \n    email: gema.faviles@uclm.es\n  - name: Isidro Hidalgo\n    email: isidro.hidalgo@uclm.es \n#date: \"2024-12-10\"\nbibliography: biblio.bib\nformat:\n  revealjs:\n    theme: theme-dds.scss\n    scrollable: true\n    toc-title: Index\n    toc: false\n    slide-number: c/t\n    fig-align: center\n    show-slide-number: all\n    transition: fade\n    background-transition: fade\n    height: 900\n    width: 1600\n    fontcolor: \"#262d36\"\n    highlight-style: ayu-mirage\n    multiplex: true\n    embed-resources: true\n    code-overflow: scroll\n  pdf:\n    toc: true\n    number-sections: true\n    colorlinks: true\n    out-width: \"50%\"\ncode-link: true\nexecute:\n  code-overflow: scroll\n  echo: true\n  freeze: auto\n  eval: true\n  fig-height: 6\n  warning: false\n  code-fold: true\n  comment: \"#>\"\n  code-line-numbers: true\n  code-copy: true\n---\n\n\n\n\n\n#  {#title-slide data-menu-title=\"Storytelling con R\" aria-label=\"dddd.\"}\n\n<!-- background-image=\"img/r-giralda2.png\" -->\n\n[Unidad 3]{.custom-title-1} [La elecci√≥n de un gr√°fico efectivo.]{.custom-title-2} \n<!-- [Gema Fern√°ndez-Avil√©s Calder√≥n<br> Universidad de Castilla-La Mancha]{.custom-author} -->\n[*From data to viz* ]{.custom-author}\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n# Agenda\n\n1.  Objetivos de aprendizaje\n\n2.  Resultados esperados\n\n3.  Conceptos clave \n\n4.  ¬øQu√© hemos aprendido?\n\n\n\n# 1. Objetivos de aprendizaje üéØ {background-color=\"black\"}\n\n- Comprender la importancia de la visualizaci√≥n\n\n- Representaciones con \\{`ggplot2`\\}\n\n\n\n\n# 2. Resultados esperados  üèÖ {background-color=\"#017eae\"}\n\n![**Hexbin plot (starwars data)**](img/07-rdo-esp.png){width=\"60%\"}\n\n\n# 3. Conceptos clave üìÉ {background-color=\"#AB5484\"}\n\n\n# ¬øPor qu√© es importante la visualizaci√≥n? üñº {background-color=\"#017eae\"}\n\n>[**\"The simple graph has brought more information to the data analyst's mind than any other device.\" --- John Tukey**]{style=\"color:white\"} \n\n\n\n## DatasauRus  {.smaller}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(datasauRus)\nlibrary(dplyr)\n\ndatasaurus_dozen |> \n    group_by(dataset) |> \n    summarize(\n      mean_x    = mean(x),\n      mean_y    = mean(y),\n      std_dev_x = sd(x),\n      std_dev_y = sd(y),\n      corr_x_y  = cor(x, y)\n    )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 √ó 6\n  dataset  mean_x mean_y std_dev_x std_dev_y corr_x_y\n  <chr>     <dbl>  <dbl>     <dbl>     <dbl>    <dbl>\n1 away       54.3   47.8      16.8      26.9  -0.0641\n2 bullseye   54.3   47.8      16.8      26.9  -0.0686\n3 circle     54.3   47.8      16.8      26.9  -0.0683\n4 dino       54.3   47.8      16.8      26.9  -0.0645\n5 dots       54.3   47.8      16.8      26.9  -0.0603\n6 h_lines    54.3   47.8      16.8      26.9  -0.0617\n# ‚Ñπ 7 more rows\n```\n\n\n:::\n:::\n\n\n\n\n## DatasauRus  \n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/datasauRus-visualiza-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n::: {.callout-note}\nOtros ejemplos cl√°sicos son el cuarteto de Anscombe y la paradoja de Simpson.\n:::\n\n\n\n## ¬øC√≥mo describir√≠as la relaci√≥n entre la masa y la altura de los personajes de Starwars? \n\n<!-- ![**Imagen tomada de https://datasciencebox.org**](img/07-sw-plot.png){width=\"60%\"} -->\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nggplot(data = starwars, mapping = aes(x = height, y = mass)) +\n  geom_point() \n```\n\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n<!-- ## ¬øExiste alg√∫n outlier? {.smaller} -->\n\n<!-- ::: columns -->\n\n<!-- ::: {.column width=\"50%\"} -->\n\n<!-- ```{r sw-outlier-jabba, fig.show = \"hide\", warning = FALSE} -->\n<!-- library(ggplot2) -->\n<!-- library(dplyr) -->\n\n<!-- ggplot(data = starwars, -->\n<!--        mapping = aes(x = height, y = mass)) + -->\n<!--   geom_point() -->\n<!-- ``` -->\n\n<!-- ::: -->\n\n<!-- ::: {.column width=\"50%\"} -->\n\n<!-- ```{r ref.label = \"sw-outlier-jabba\", echo = FALSE, warning = FALSE, out.width = \"100%\", fig.width = 8} -->\n<!-- ``` -->\n<!-- ::: -->\n<!-- ::: -->\n\n  \n## ¬øQui√©n es el *outlier*? Jabba Desilijic Tiure\n\n![**Imagen adaptada de https://datasciencebox.org**](img/07-jabba.png){width=\"60%\"}\n\n\n\n\n# \"The grammar of graphics\": \\{`ggplot`\\} {background-color=\"black\"}\n\n![**Imagen adaptada de https://datasciencebox.org**](img/07-ggplot2-book.png){width=\"60%\"}\n\n+ \\{`ggplot2`\\} es un paquete `tidyverse` para visualizaci√≥n de datos.\n\n+ **gg** en `ggplot2` hace referencia a *Grammar of Graphics.*\n\n+ Inspirado en el libro *Grammar of Graphics*, @wilkinson2012grammar.\n\n\n## ¬øC√≥mo visualizar con la funci√≥n `ggplot()` de \\{`ggplot`\\}?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = [dataset], \n       mapping = aes(x = [x-variable], y = [y-variable])) +\n   geom_xxx() +\n   otras opciones\n```\n:::\n\n\n\n\n\n**Ahora, de verdad:**\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)  #cargamos los datos 'starwars'\n# se crea un nuevo data.frame sin el outlier (que se elimina)\nstarwars2 <- filter(starwars, name != \"Jabba Desilijic Tiure\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars2, mapping = aes(x = height, y = mass)) +\n  geom_point() +\n  labs(title = \"Mass vs. height of Starwars characters\",\n       x = \"Height (cm)\", y = \"Weight (kg)\")\n```\n:::\n\n\n\n\n>Ayuda con ggplot2: [ggplot2.tidyverse.org](ggplot2.tidyverse.org) y Cheatsheets.\n\n## Mi primer plot con `ggplot()` \n\n::: columns\n::: {.column width=\"50%\"}\n\n![**Fuente: Wikipedia**](img/07-sw-logo.png){width=\"100%\"}\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/ggplot-pract2-1.png){width=960}\n:::\n:::\n\n\n\n:::\n:::\n\n\n\n# Paso a paso  üêæ {background-color=\"#017eae\"}\n\n---\n\n## Paso a paso: {.smaller}\n\n**Empezamos con el data.frame `starwars2`**\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1\"}\nggplot(data = starwars2) \n```\n:::\n\n\n\n:::\n\n\n::: {.column width=\"50%\"}\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-3-1.png){width=100%}\n:::\n:::\n\n\n\n\n:::\n:::\n\n\n## Paso a paso: {.smaller}\n\nEmpezamos con el data.frame `starwars2`  \n**ponemos `height` en el eje-x**\n\n\n::: columns \n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(data = starwars2,\n       mapping = aes(x = height))\n```\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-4-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n## Paso a paso: {.smaller}\n\nEmpezamos con el data.frame `starwars2`  \nponemos `height` en el eje-x  \n**ponemos `mass` en el eje-y**  \n\n\n::: columns \n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = starwars2,\n       mapping = aes(x = height,\n                     y = mass)) \n```\n:::\n\n\n\n:::\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-5-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n---\n\n\n## Paso a paso:  {.smaller}\n\nEmpezamos con el data.frame `starwars2`  \nponemos `height` en el eje-x  \nponemos `mass` en el eje-y  \n**representamos cada observaci√≥n con un punto**  \n\n\n::: columns \n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = starwars2,\n       mapping = aes(x = height,\n                     y = mass)) + \n  geom_point() \n```\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-6-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n---\n\n## Paso a paso: {.smaller}\n\nEmpezamos con el data.frame `starwars2`  \nponemos `height` en el eje-x  \nponemos `mass` en el eje-y  \nrepresentamos cada observaci√≥n con un punto  \n**y la variable `gender` para el color de cada punto**  \n\n\n::: columns \n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = starwars2,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour = gender)) + \n  geom_point()\n```\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-7-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n---\n\n## Paso a paso: {.smaller}\n\nEmpezamos con el data.frame `starwars2`  \nponemos `height` en el eje-x  \nponemos `mass` en el eje-y  \nrepresentamos cada observaci√≥n con un punto  \ny la variable `gender` para el color de cada punto.  \n**A√±adimos t√≠tulo al gr√°fico: \"Mass vs. height of Starwars characters\"**  \n\n\n::: columns \n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(data = starwars2,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour =gender)) +\n  geom_point() +\n  labs(title = \"Mass vs. height of Starwars characters\")\n```\n:::\n\n\n\n:::\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-8-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n---\n\n## Paso a paso: {.smaller}\n\nEmpezamos con el data.frame `starwars2`  \nponemos `height` en el eje-x  \nponemos `mass` en el eje-y  \nrepresentamos cada observaci√≥n con un punto  \ny la variable `gender` para el color de cada punto.  \nA√±adimos t√≠tulo al gr√°fico: \"Mass vs. height of Starwars characters\"  \n**a√±adimos el subt√≠tulo \"by gender\"**  \n\n\n::: columns \n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(data = starwars2,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour = gender)) +\n  geom_point() +\n  labs(title = \"Mass vs. height of Starwars characters\",\n       subtitle = \"by gender\")  \n```\n:::\n\n\n\n:::\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-9-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n---\n\n## Paso a paso:  {.smaller}\n\n\nEmpezamos con el data.frame `starwars2`  \nponemos `height` en el eje-x  \nponemos `mass` en el eje-y  \nrepresentamos cada observaci√≥n con un punto  \ny la variable `gender` para el color de cada punto.  \nA√±adimos t√≠tulo al gr√°fico: \"Mass vs. height of Starwars characters\"  \na√±adimos el subt√≠tulo \"G√©nero de los personajes de starwars2\"  \n**etiquetamos los ejes x e y como \"x = \"Height (cm)\", y = \"Weight (kg)\", respectivamente**  \n\n\n::: columns \n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(data = starwars2,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour = gender)) +\n  geom_point() +\n  labs(title = \"Mass vs. height of Starwars characters\",\n       subtitle = \"by gender\",  \n       x = \"Height (cm)\", y = \"Weight (kg)\")\n```\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-10-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n---\n\n## Paso a paso: {.smaller}\n\n\nEmpezamos con el data.frame `starwars2`  \nponemos `height` en el eje-x  \nponemos `mass` en el eje-y  \nrepresentamos cada observaci√≥n con un punto  \ny la variable `gender` para el color de cada punto.  \nA√±adimos t√≠tulo al gr√°fico: \"Mass vs. height of Starwars characters\"  \na√±adimos el subt√≠tulo \"G√©nero de los personajes de starwars2\"  \netiquetamos los ejes x e y como \"x = \"Height (cm)\", y = \"Weight (kg)\", respectivamente  \n**etiquetamos la leyenda \"Species\"**\n\n\n::: columns \n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(data = starwars2,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour = gender)) +\n  geom_point() +\n  labs(title = \"Mass vs. height of Starwars characters\",\n       subtitle = \"by gender\",  \n       x = \"Height (cm)\", y = \"Weight (kg)\",\n       colour = \"Gender\") \n```\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-11-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n---\n\n## Paso a paso:  {.smaller}\n\n\nEmpezamos con el data.frame `starwars2`  \nponemos `height` en el eje-x  \nponemos `mass` en el eje-y  \nrepresentamos cada observaci√≥n con un punto  \ny la variable `gender` para el color de cada punto.  \nA√±adimos t√≠tulo al gr√°fico: \"Mass vs. height of Starwars characters\"  \na√±adimos el subt√≠tulo \"G√©nero de los personajes de starwars2\"  \netiquetamos los ejes x e y como \"x = \"Height (cm)\", y = \"Weight (kg)\",   \netiquetamos la leyenda \"Gender\"  \n**a√±adimos la fuente de los datos.**  \n\n\n::: columns \n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(data = starwars2,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour = gender)) +\n  geom_point() +\n  labs(title = \"Mass vs. height of Starwars characters\",\n       subtitle = \"by gender\",  \n       x = \"Height (cm)\", y = \"Weight (kg)\",\n       colour = \"Gender\",\n       caption = \"Source: dplyr package\") \n```\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-12-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n---\n\n## Paso a paso: {.smaller}\n\nEmpezamos con el data.frame `starwars2`  \nponemos `height` en el eje-x  \nponemos `mass` en el eje-y  \nrepresentamos cada observaci√≥n con un punto  \ny la variable `gender` para el color de cada punto.  \nA√±adimos t√≠tulo al gr√°fico: \"Mass vs. height of Starwars characters\"  \na√±adimos el subt√≠tulo \"G√©nero de los personajes de starwars2\"  \netiquetamos los ejes x e y como \"x = \"Height (cm)\", y = \"Weight (kg)\",   \netiquetamos la leyenda \"Gender\"  \na√±adimos la fuente de los datos.  \n**Finalmente, usamos paleta con una escala de colores discreta que est√° dise√±ada para ser percibida por espectadores con formas comunes de daltonismo.**  \n\n\n::: columns \n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"11\"}\nggplot(data = starwars2,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour = gender)) +\n  geom_point() +\n  labs(title = \"Mass vs. height of Starwars characters\",\n       subtitle = \"by gender\",  \n       x = \"Height (cm)\", y = \"Weight (kg)\",\n       colour = \"Gender\",\n       caption = \"Source: dplyr package\")  +\n  scale_colour_viridis_d()\n```\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-13-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n\n# Aesthetics (est√©tica) üéØ  {background-color=\"#017eae\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars2,\n       mapping = aes(x = height,\n                     y = mass,\n                     colour = xxxxx,\n                     shape = xxxxx,\n                     size = xxxxx,\n                     alpha = xxxxx)\n       ) +\n  geom_point() \n```\n:::\n\n\n\n\n\n# ¬øCu√°l es la mejor representaci√≥n gr√°fica? üéØ  {background-color=\"#017eae\"}\n\n# ¬øC√≥mo son mis datos? ü§î  \n\n# Un mundo de posibilidades ü§î \n\n>[[**From data to viz project**]{style=\"color:blue\"}](https://www.data-to-viz.com/)\n\n![**√Årbol de clasificaci√≥n de gr√°ficos seg√∫n el tipo de datos**](img/03-visual-from-data-to-viz.png){width=\"60%\"}\n\n\n\n# 1. Distribuci√≥n üéØ  {background-color=\"#017eae\"}\n\n\n![**Gr√°ficos para distribuciones**](img/03-visual-distribution.png){width=\"60%\"}\n\n# 1. Distribuci√≥n üéØ  {background-color=\"#017eae\"}\n\n## 1.1 Histograma\n\nUn histograma es una representaci√≥n gr√°fica de una variable en forma de barras, donde la superficie de cada barra es proporcional a la frecuencia de los valores representados. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(CDR)\nhead(renta_municipio_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                           Unidad  2019  2018  2017 2016 2015 codigo_ine\n1                    44001 Ababuj    NA    NA    NA   NA   NA      44001\n2      4400101 Ababuj distrito 01    NA    NA    NA   NA   NA    4400101\n3 4400101001 Ababuj secci√≥n 01001    NA    NA    NA   NA   NA 4400101001\n4                    40001 Abades 11429 10731 10314 9816 9904      40001\n5      4000101 Abades distrito 01 11429 10731 10314 9816 9904    4000101\n6 4000101001 Abades secci√≥n 01001 11429 10731 10314 9816 9904 4000101001\n```\n\n\n:::\n\n```{.r .cell-code}\nrenta <- renta_municipio_data |>\n   drop_na()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(renta, aes(`2019`)) +\n  geom_histogram() #30 bins por defecto\n```\n\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/renta-hist-1.png){width=960}\n:::\n:::\n\n\n\n\n## 1.1 Histograma \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_renta_2019 <- ggplot(renta, aes(`2019`)) +\n  geom_histogram(color = \"yellow\", \n                 fill = \"red\", \n                 bins = nclass.Sturges(renta_municipio_data$`2019`)) +\nlabs(title = \"Distribuci√≥n de la renta por municipios\",\n       x = \"Renta per c√°pita\",\n       y = \"Frecuencia\") +\ntheme_minimal()\n\np_renta_2019 \n```\n\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/renta-hist-beauty-1.png){width=960}\n:::\n:::\n\n\n\n\n\n## 1.2 Gr√°fico de densidad\n\nUna representaci√≥n alternativa al histograma es la l√≠nea de densidad, que sustituye las barras por una l√≠nea continua, generalmente suavizada\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_renta_2019_density <- ggplot(renta, aes(`2019`)) +\n  geom_density(fill = \"blue\",  alpha= 0.4) +\n  labs(title = \"Distribuci√≥n de la renta por municipios\",\n       x = \"Renta per c√°pita\",\n       y = \"Densidad\") +\n  theme_minimal()\n```\n:::\n\n\n\n\n\n## 1.2 Gr√°fico de densidad e histograma\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_renta_2019_density + \n  geom_histogram(aes(y=..density..), \n                 fill = \"yellow\", color=\"blue\", alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/renta-density2-1.png){width=960}\n:::\n:::\n\n\n\n\n\n1.3 Boxplot vs. Viol√≠n \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- renta |>\n  ggplot(aes(x=0, y= `2019`)) \n\nboxplot <- p + \n  geom_boxplot(color = \"red\", fill = \"pink\") +\n  theme_minimal()\n\nviolin <- p + geom_violin(color = \"red\", fill = \"pink\") +\n  theme_minimal()\n\nlibrary(patchwork)\nboxplot + violin\n```\n\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n\n\n\n1.3 Viol√≠n \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# con el objeto renta haz un gr√°fico de violin para la variable `2019`, 2018, 2017 en un mismo plot para que se puedan comparar\n\np <- renta |>\n   ggplot(aes(x=0, y= `2017`))\n \np +\n   geom_violin(aes(fill = \"2017\"), color = \"red\") +\n   geom_violin(aes(x=1, y= `2018`, fill = \"2018\"), color = \"blue\") +\n   geom_violin(aes(x=2, y= `2019`, fill = \"2019\"), color = \"green\") +\n   theme_minimal() +\n   scale_fill_manual(values = c(\"2017\" = \"red\", \"2018\" = \"blue\", \"2019\" = \"green\")) +\n#  pon en el eje x los a√±os y en el eje y Renta per c√°pita  (euros)\n   scale_x_continuous(breaks = c(0, 1, 2), labels = c(\"2017\", \"2018\", \"2019\")) +\n   labs(title = \"Distribuci√≥n de la renta por municipios\",\n       x = \"A√±o\",\n       y = \"Renta per c√°pita (euros)\")\n```\n\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n\n\n\n1.3 Viol√≠n \n\nCuando se trabaja en un proyecto de ciencia de datos, lo normal es tener tanto variables cualitativas como cuantitativas. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnox_madrid <-contam_mad |>  \n  na.omit() |>  \n  filter(nom_abv == \"NOx\") |> \n  filter(between(fecha, left = as.Date(\"2022-03-01\"), right = as.Date(\"2022-03-31\"))) \n  \n nox_madrid |> \n  ggplot(aes(zona, daily_mean)) +\n  geom_violin() +\n  geom_jitter(height = 0, width = 0.01) +\n  aes(x = zona, y = daily_mean, fill =zona) +\n  labs(title = \"Distribuci√≥n de NOx por zona\",\n       x = \"Zona\",\n       y = \"Concentraci√≥n de NOx (¬µg/m3)\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n\n\n\n\n1.3 Viol√≠n \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggstatsplot)\n\nggbetweenstats(\n  data =nox_madrid,\n  x = zona,\n  y = daily_mean\n)\n```\n\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-17-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n\n## 1.2 Densidad\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggridges)\nnox_madrid |> \n  ggplot(aes(x = daily_mean, y = zona, fill= zona)) +\n  geom_density_ridges() +\n  theme_ridges() + \n  labs(title = \"Distribuci√≥n de NOx por zona\",\n       x = \"Concentraci√≥n de NOx (¬µg/m3)\",\n       y = \"Zona\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-18-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n# 2. Distribuci√≥n üéØ  {background-color=\"#017eae\"}\n\n\n![**Gr√°ficos para correlaciones**](img/03-visual-correlation.png){width=\"60%\"}\n\n\n## 2.1 Scatterplot\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load data\ndemog_data <- read.table(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/multivariate.csv\", header = T, sep = \";\")\ncolnames(demog_data) <- gsub(\"\\\\.\", \"_\", colnames(demog_data))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# scatterplot entre growth.rate y Life.expectancy\ndemog_data  |>\n  ggplot(aes(x = Growth_rate, y = Life_expectancy)) +\n  geom_point() +\n  labs(title = \"Esperanza de vida vs. Tasa de crecimiento\",\n       x = \"Tasa de crecimiento\",\n       y = \"Esperanza de vida\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n\n\n\n\n## 2.1 Scatterplot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemog_data  |>\n  ggplot(aes(x = Growth_rate, y = Life_expectancy, size=Pop,  color=Continent)) +\n  geom_point(alpha=0.5) +\n  scale_size(range = c(.1, 20)) +\n  labs(title = \"Esperanza de vida vs. Tasa de crecimiento\",\n       x = \"Tasa de crecimiento\",\n       y = \"Esperanza de vida\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-21-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n\n\n## 2.1 Scatterplot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemog_scatter <- ggplot(data = demog_data, # data\n              aes(x = Growth_rate, y = Life_expectancy, colour = Continent)) + #aesthetics\n    geom_point(alpha = 0.5) + #geometries\n    facet_wrap(~ Continent, scales = \"free\") + #facets\n    labs(title = \"Life expectancy at birth vs. Per capita GDP\", \n         x = \"Growth_rate\", y = \"Life_expectancy\", colour = \"Continent\") + #labels\n    theme_light() #themes\n\ndemog_scatter \n```\n\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-22-1.png){width=960}\n:::\n:::\n\n\n\n\n\n## 2.1 Scatterplot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemog_scatter + geom_smooth(method = NULL, se = T) \n```\n\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-23-1.png){width=960}\n:::\n:::\n\n\n\n\n\n## 2.1 Scatterplot matrix\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# con las variables cuantitativas el conjunto de datos demog_data haz una scatterplot matrix\nlibrary(GGally)\n\ndemo_cuanti <- demog_data |>\n   select(Pop, Birth_rate, Mortality_rate, Life_expectancy, Infant_mortality, \n         Children_per_woman,  Growth_rate, Population_aged_65_) |>\n   na.omit()\n\ndemo_cuanti |> \n   ggpairs()\n```\n\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-24-1.png){width=960}\n:::\n:::\n\n\n\n\n\n## Correlation matrix\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# con las variables cuantitativas el conjunto de datos demog_data haz una matriz de correlaci√≥n\ndemo_cuanti |> \n  cor() |> \n  corrplot:: corrplot.mixed( order = 'AOE')\n```\n\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-25-1.png){width=960}\n:::\n:::\n\n\n\n\n\n## 2.2 Heatmap\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheatmap(as.matrix(scale(demo_cuanti)), col = topo.colors(256), cexCol =  0.5) \n```\n\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/unnamed-chunk-26-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Otros gr√°ficos interesantes üéØ  {background-color=\"#017eae\"}\n\n\n## Hexbin plot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars2, mapping = aes(x = height, y = mass)) +\n  geom_hex() \n```\n\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/hexbin-1.png){width=960}\n:::\n:::\n\n\n\n\n\n## Density\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = starwars2, aes(x = height)) +\n  geom_density()\n```\n\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/density-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n## Density con  `filter()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars2 |>\n  filter(gender %in% c(\"feminine\", \"masculine\")) |>\n  ggplot(aes(height, fill = gender)) +\n  geom_density()\n```\n\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/density-filter-1.png){width=960}\n:::\n:::\n\n\n\n\n  \n## Density con `facet` {.smaller}\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars |>\n  mutate(human = case_when(species == \"Human\" ~ \"Human\",\n                           species != \"Human\" ~ \"Not Human\")) |>\n  filter(gender %in% c(\"feminine\", \"masculine\"), !is.na(human)) |>\n  ggplot(aes(height, fill = gender)) +\n  facet_grid(. ~ human) + #<--- this is a formula\n  geom_density()\n```\n\n::: {.cell-output-display}\n![](u3-visual_files/figure-revealjs/density-filter-face-1.png){width=960}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n\n\n# Gr√°ficos interactivos üéØ  {background-color=\"#017eae\"}\n\n## La funci√≥n `ggplotly()` de \\{plotly\\}\n\n\n## El paquete `leaflet` {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(leaflet)\nleaflet() |>\n  addTiles() |>  \n  addMarkers(lng= -5.9925707869459455, lat= 37.38633182455925, popup=\"La Giralda de Sevilla\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"leaflet html-widget html-fill-item\" id=\"htmlwidget-4a3862b735120393f386\" style=\"width:960px;height:576px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-4a3862b735120393f386\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"https://openstreetmap.org/copyright/\\\">OpenStreetMap<\\/a>,  <a href=\\\"https://opendatacommons.org/licenses/odbl/\\\">ODbL<\\/a>\"}]},{\"method\":\"addMarkers\",\"args\":[37.38633182455925,-5.992570786945945,null,null,null,{\"interactive\":true,\"draggable\":false,\"keyboard\":true,\"title\":\"\",\"alt\":\"\",\"zIndexOffset\":0,\"opacity\":1,\"riseOnHover\":false,\"riseOffset\":250},\"La Giralda de Sevilla\",null,null,null,null,{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]}],\"limits\":{\"lat\":[37.38633182455925,37.38633182455925],\"lng\":[-5.992570786945945,-5.992570786945945]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# library(leaflet)\nleaflet() |>\n  addTiles() |>  \n  addProviderTiles(\"Esri.WorldImagery\") |>\n  addMarkers(lng= -5.9925707869459455, lat= 37.38633182455925, popup=\"La Giralda de Sevilla\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"leaflet html-widget html-fill-item\" id=\"htmlwidget-65f4b202e7b318d9aaa2\" style=\"width:960px;height:576px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-65f4b202e7b318d9aaa2\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"https://openstreetmap.org/copyright/\\\">OpenStreetMap<\\/a>,  <a href=\\\"https://opendatacommons.org/licenses/odbl/\\\">ODbL<\\/a>\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",null,null,{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false}]},{\"method\":\"addMarkers\",\"args\":[37.38633182455925,-5.992570786945945,null,null,null,{\"interactive\":true,\"draggable\":false,\"keyboard\":true,\"title\":\"\",\"alt\":\"\",\"zIndexOffset\":0,\"opacity\":1,\"riseOnHover\":false,\"riseOffset\":250},\"La Giralda de Sevilla\",null,null,null,null,{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]}],\"limits\":{\"lat\":[37.38633182455925,37.38633182455925],\"lng\":[-5.992570786945945,-5.992570786945945]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n:::\n:::\n\n\n## Recursos interesantes\n\n::: columns\n::: {.column width=\"33%\"}\n\n![https://r-graph-gallery.com/boxplot.html](img/07-gallery.png){width=\"100%\"}\n\n[**The R graph gallery**](https://r-graph-gallery.com/)\n:::\n\n::: {.column width=\"33%\"}\n\n![https://r-charts.com/](img/07-rchart.png){width=\"100%\"}\n\n[**R charts**](https://r-charts.com/)\n:::\n\n::: {.column width=\"33%\"}\n\n![https://exts.ggplot2.tidyverse.org/gallery/](img/07-ggplot-ext.png){width=\"100%\"}\n\n[**Extensiones \\{ggplot2\\}**](https://exts.ggplot2.tidyverse.org/gallery/)\n:::\n:::\n\n\n\n\n# Nuestra filosof√≠a üìñ: learning by doing {background-color=\"#AB5484\"}\n\n\n+ Recuerda que los ordenadores actualmente no son inteligentes.\n\n+ Filosof√≠a: `copy, paste, and tweak`\n\n+ La mejor forma de aprender c√≥digo es haci√©ndolo.\n\n+ La pr√°ctica es la clave\n\n\n\n# 4. Conceptos clave üìñ {background-color=\"black\"}\n\n\n+ \\{ggplot2\\}.\n\n+ `geom_xxx()`.\n\n\n# Referencias \n\n\n\n\n\n\n\n\n",
    "supporting": [
      "u3-visual_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"u3-visual_files/libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"u3-visual_files/libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"u3-visual_files/libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"u3-visual_files/libs/leaflet-1.3.1/leaflet.css\" rel=\"stylesheet\" />\n<script src=\"u3-visual_files/libs/leaflet-1.3.1/leaflet.js\"></script>\n<link href=\"u3-visual_files/libs/leafletfix-1.0.0/leafletfix.css\" rel=\"stylesheet\" />\n<script src=\"u3-visual_files/libs/proj4-2.6.2/proj4.min.js\"></script>\n<script src=\"u3-visual_files/libs/Proj4Leaflet-1.0.1/proj4leaflet.js\"></script>\n<link href=\"u3-visual_files/libs/rstudio_leaflet-1.3.1/rstudio_leaflet.css\" rel=\"stylesheet\" />\n<script src=\"u3-visual_files/libs/leaflet-binding-2.2.2/leaflet.js\"></script>\n<script src=\"u3-visual_files/libs/leaflet-providers-2.0.0/leaflet-providers_2.0.0.js\"></script>\n<script src=\"u3-visual_files/libs/leaflet-providers-plugin-2.2.2/leaflet-providers-plugin.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}