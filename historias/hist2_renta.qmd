---
title: "Contaminación en el aire en la ciudad de Madrid"
author:
  - Gema Fernández-Avilés (Gema.FAviles@uclm.es)
  - Isidro Hidalgo (Isidro.Hidalgo@uclm.es)
format: html
theme: cerulean
highlight-style: ayu-mirage
self-contained: true
date: "`r Sys.Date()`"
code-link: true
number-sections: true
execute:
  code-overflow: scroll
  echo: true
  eval: true
  output: true
  include: true
  freeze: auto
  fig-height: 5
  warning: false
  code-fold: true
  comment: "#>"
  code-line-numbers: true
  code-copy: true
#bibliography: biblio.bib
---


# ¿Qué pasa con la renta municipal en España antes de la pandemia de coronavirus?

Trabajo en una compañía privada que quiere introducir un producto de alta gama, y me ha pedido el jefe que le haga un informe sobre la renta municipal en España de los últimos años, porque el CEO quiere ampliar el mercado a determinados tramos de renta, y necesita localizar caladeros de negocio. Me ha dicho que los datos los puedo sacar del paquete `CDR`. También me ha dicho que están limpios, pero no me fío.

## Contexto

¿Por qué es importante? Porque no da lo mismo analizar la renta como administración que como empresario que busca oportunidades de negocio. En el primer caso, se busca entender la distribución de la renta para poder diseñar políticas públicas que reduzcan la desigualdad. Probablemente, no estamos tan interesados en los municipios más ricos, sino en los más desiguales. Pero como somos gente de empresa, buscamos identificar segmentos de mercado con capacidad de compra para ofrecer un producto, por lo que nos interesa saber dónde vive la gente con más dinero.

En cualquiera de los dos casos, lo primero es hacer un análisis exploratorio para ver si hay algo raro en los datos y analizar mínimamente las variables de interés. Y después, le vamos a preparar al jefe un par de gráficos para que vea que soy un crack **aportándole conocimiento**.


::: {.callout-note}
Los datos que se utilizan en esta historia están disponibles en el paquete `CDR`
que puede instalarse con el siguiente comando:

```r
install.packages("remotes")
remotes::install_github("cdr-book/CDR")
```

Renta Neta per cápita por municipios (en euros), distritos y secciones censales. Esta información se ha extraído del Atlas de distribución de renta de los hogares proporcionado por el Instituno Nacional de Estadística y ha sido procesada para faciliar el análisis.

:::


Un poco de información básica sobre los datos cargados:

```{r hist-prep}
library(CDR)
head(renta_municipio_data)
help(renta_municipio_data)
str(renta_municipio_data)
```

Vemos que hay mezcla de secciones censales y municipios. Vamos a quedarnos solo con los municipios (ya sabía yo que habría que hacer un poco de limpieza)...

```{r municipios}
renta_municipio_data <- renta_municipio_data[substr(
  renta_municipio_data$Unidad, 6, 6) == " ",
]
```

::: {#exr-1}

¿Que hacemos con los datos faltantes? En este análisis eliminarlos.
:::

```{r hist-prep2}
library(tidyverse)
renta <- renta_municipio_data |>
   drop_na()

head(renta)
```

¡Esto ya es otra cosa! Ahora sí que podemos empezar a trabajar con datos limpios (los ingleses les llaman "tidy data").

## Análisis exploratorio de la renta municipal en España

::: {#exr-2}

¿Cuál es la renta per cápita media de los municipios españoles en 2019?
:::

```{r}
summary(renta$`2019`)
```


::: {#exr-2}

¿Es la renta media la misma en todos los municipios?
:::

```{r}
library("summarytools")
renta |>
  select(`2019`) |>
  descr()
```


¡Qué lio! Mejor un gráfico que una tabla (J. Tukey)

```{r renta-hist}
ggplot(data = renta, aes(x=`2019`)) +
  geom_histogram() #30 bins por defecto
```

¡Qué histograma más feo! Vamos a mejorarlo

::: {.callout-important title="Tu turno"}

Completa las partes del código señaladas por `______` o `xxx` para obtener el resultado propuesto.
:::




```{r renta-hist-beauty-hw}
#| eval: false
p_renta_2019 <- ggplot(renta, aes(`2019`)) +
  geom_xxxxxx(col = "darkred",
                 fill = "bisque", 
                 bins = nclass.Sturges(renta_municipio_data$`2019`)) +
  geom_xxxxxx(aes(xintercept = mean(`2019`)),
             color = "red",
             linetype = "dashed",
             linewidth = 1) +
  geom_xxxxxx(aes(x = mean(`2019`),
                y = 100,
                label = round(mean(`2019`), 2)),
            color = "darkred") +
  labs(title = "Distribución de la renta por municipios",
       x = "Renta per cápita",
       y = "Frecuencia") +
  theme_xxxxxx()

p_renta_2019 
```


```{r renta-hist-beauty}
#| echo: false
p_renta_2019 <- ggplot(renta, aes(`2019`)) +
  geom_histogram(col = "darkred",
                 fill = "bisque", 
                 bins = nclass.Sturges(renta_municipio_data$`2019`)) +
  geom_vline(aes(xintercept = mean(`2019`)),
             color = "red",
             linetype = "dashed",
             linewidth = 1) +
  geom_text(aes(x = mean(`2019`),
                y = 100,
                label = round(mean(`2019`), 2)),
            color = "darkred") +
  labs(title = "Distribución de la renta por municipios",
       x = "Renta per cápita",
       y = "Frecuencia") +
  theme_minimal()

p_renta_2019 
```


::: {#exr-2}

¿Sería mejor tener un gráfico de densidad? ¿Cómo se interpretaría?
¿Qué diferencias hay respecto al histograma?
:::


```{r renta-density}
p_renta_2019_density <- ggplot(renta, aes(`2019`)) +
  geom_density(fill = "bisque",
               alpha= 0.4,
               color="darkred",
               lwd = 1) +
  geom_vline(aes(xintercept = mean(`2019`)),
             color = "red",
             lwd = 1,
             linetype = "dashed") +
  geom_text(aes(x = mean(`2019`),
                y = 0.00001,
                label = round(mean(`2019`), 2)),
            color = "darkred") +
  labs(title = "Distribución de la renta por municipios",
       x = "Renta per cápita",
       y = "Densidad") +
  theme_minimal()

p_renta_2019_density
```


::: {#exr-2}

¿Cuál me gusta más? ¿Histograma o densidad? ¿Juntos?
:::


```{r renta-density2}
p_renta_2019_density + 
  geom_histogram(aes(y=..density..),
                 fill = "bisque",
                 color="darkred",
                 alpha = 0.4)
```


::: {#exr-2}

¿Por qué no tener un 5-summary plot? ¿Qué nos dice?
:::


```{r}
p <- renta |>
  ggplot(aes(x=0, y= `2019`)) 

boxplot <- p + 
  geom_boxplot(color = "darkred", fill = "bisque") +
  theme_minimal()

violin <- p + geom_violin(color = "darkred", fill = "bisque") +
  theme_minimal()

library(patchwork)
boxplot + violin
```


::: {#exr-2}

¿En los años anteriores la renta ha sido similar?
:::


```{r}
p <- renta |>
  ggplot(aes(x=0, y= `2015`))

p + geom_violin( ) +
     geom_violin(aes(fill = "2015")) +
     geom_violin(aes(x=1, y= `2016`, fill = "2016")) +
     geom_violin(aes(x=2, y= `2017`, fill = "2017")) +
     geom_violin(aes(x=3, y= `2018`, fill = "2018")) +
     geom_violin(aes(x=4, y= `2019`, fill = "2019")) +
  # añade la media de cada año al violín
  geom_point(aes(x=0, y=mean(`2015`)), color = "red") +
  geom_point(aes(x=1, y=mean(`2016`)), color = "red") +
  geom_point(aes(x=2, y=mean(`2017`)), color = "red") +
  geom_point(aes(x=3, y=mean(`2018`)), color = "red") +
  geom_point(aes(x=4, y=mean(`2019`)), color = "red") +
  theme_minimal() +
    scale_x_continuous(breaks = c(0, 1, 2, 3, 4),
                       labels = c("2015", "2016", "2017", "2018", "2019")) +
     labs(title = "Distribución de la renta por municipios",
          x = "Año",
          y = "Renta per cápita (euros)")
```


::: {#exr-2}

¿Es necesario el color? ¿Queremos ver también la evolución a lo largo del tiempo? Pues quizá podemos matar dos pájaros de un tiro... veamos...
:::


```{r}
medias <- renta |>
  summarise(across(`2015`:`2019`, mean, na.rm = TRUE)) |>
  pivot_longer(cols = `2015`:`2019`,
               names_to = "pos",
               values_to = "renta") |>
  mutate(pos = as.numeric(pos) - 2015)
p <- renta |>
  ggplot(aes(x=0, y= `2015`))

p + geom_violin( ) +
  geom_violin(aes(x=0, y= `2015`), fill = "bisque", col = "transparent") +
  geom_violin(aes(x=1, y= `2016`), fill = "bisque", col = "transparent") +
  geom_violin(aes(x=2, y= `2017`), fill = "bisque", col = "transparent") +
  geom_violin(aes(x=3, y= `2018`), fill = "bisque", col = "transparent") +
  geom_violin(aes(x=4, y= `2019`), fill = "bisque", col = "transparent") +
  # añade la media de cada año al violín
  geom_point(aes(x=0, y=mean(`2015`)), color = "darkred") +
  geom_point(aes(x=1, y=mean(`2016`)), color = "darkred") +
  geom_point(aes(x=2, y=mean(`2017`)), color = "darkred") +
  geom_point(aes(x=3, y=mean(`2018`)), color = "darkred") +
  geom_point(aes(x=4, y=mean(`2019`)), color = "darkred") +
  # añade la línea de tendencia uniendo las medias
  geom_line(data = medias,
            aes(x = pos,
                y = renta,
                group = 1),
            color = "darkred") +
  theme_minimal() +
  scale_x_continuous(breaks = c(0, 1, 2, 3, 4),
                     labels = c("2015", "2016", "2017", "2018", "2019")) +
  labs(title = "Distribución de la renta por municipios entre 2015 y 2019",
       x = "Año",
       y = "Renta per cápita (euros)")
```


::: {#exr-2}

¿Son los municipios de norte más ricos que los del sur de España en 2019?
:::


```{r}
library("sf")
help(municipios)

munis_renta <- municipios |>
  left_join(renta) |>   # une datasets
  select(name, cpro, ine.prov.name, cmun,
       `2015`,`2016`,`2017`,`2018`,`2019`) # selecciona variables
```

```{r}
ggplot(munis_renta) +
  geom_sf(aes(fill = `2019`), color = NA) +
  scale_fill_continuous(labels = scales::label_number(big.mark = ".",
                                                      decimal.mark = ",",
                                                      suffix = " €" )) +
  theme_minimal()
```


## Que no nos mientan con la estadística (ni con la visualización)

```{r}
munis_renta_clean <- munis_renta |>
  filter(!is.na(`2019`))

# crea Fisher-Jenks clases
library(classInt)
fisher <- classIntervals(munis_renta_clean$`2019`,
                         style = "fisher",
                         n = 10)
ggplot(munis_renta_clean) +
  geom_sf(aes(fill = cut(`2019`, fisher$brks)), color = NA) +
  scale_fill_viridis_d(option= "A",
                       labels= scales::label_number(suffix= "€")) +
  guides(fill = guide_colorsteps()) +
  labs(fill= "Fisher-Jenks") +
  theme_minimal()
```

::: {#exr-2}

¿Cuál es la provincia con mayor renta media municiapal en 2019? ¿Y la que menos renta media tiene?
:::

```{r}
munis_renta |>
  ggplot(aes(x = `2019`, y = ine.prov.name, color = cpro)) +
  geom_point() +
  labs(title = "Renta per cápita por provincia en 2019",
       x = "Renta per cápita",
       y = "Provincia") +
  theme_minimal() +
  theme(legend.position = "none")
```

Mejor los ordenamos las provincias. Y de nuevo, ¿nos aporta el color?

```{r}
munis_renta2 <- munis_renta |>
  group_by(ine.prov.name) |>
  summarise(pro2019 = mean(`2019`, na.rm = TRUE)) |>
  arrange(desc(pro2019)) |>
  st_drop_geometry() |>
  filter(!is.na(pro2019))
munis_renta2_plot <- ggplot(munis_renta2, aes(y = pro2019,
                         x = reorder(ine.prov.name, pro2019)),
                         color = "darkred") +
  geom_segment(aes(x= reorder(ine.prov.name, pro2019),
                   xend = reorder(ine.prov.name, pro2019),
                   y = 0,
                   yend = pro2019),
               color ="darkred") +
  geom_point() +
  coord_flip() +
  labs(title = "Renta per cápita por provincia en 2019",
       x = "Renta per cápita",
       y = "Provincia") +
  theme_minimal()
munis_renta2_plot
```
