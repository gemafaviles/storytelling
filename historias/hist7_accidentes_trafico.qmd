---
title: "¿Cómo y dónde se producen los accidentes en Madrid?"
author:
  - Gema Fernández-Avilés (Gema.FAviles@uclm.es)
  - Isidro Hidalgo (Isidro.Hidalgo@uclm.es)
format:
  html:
    theme: cerulean
    highlight-style: ayu-mirage
    self-contained: true
    lang: es
    date: 01/20/2025
    date-format: long
    embed-resources: true
    toc-title: Summary
    toc: true
    number-sections: true
    preview-links: auto
    code-link: true
    code-fold: true
number-sections: true
execute:
  echo: true
  eval: true
  output: true
  include: true
  freeze: auto
  fig-height: 5
  warning: false
  comment: "#>"
  code-line-numbers: true
  code-copy: true
  code-overflow: scroll
  code-fold: true
---

::: {.callout-note}
Los datos que se utilizan en esta historia están disponibles en el paquete `CDR` que puede instalarse con el siguiente comando (se comprueba si no lo está):

``` {r}
#| code-summary: Instalación y/o carga del paquete `CDR`

if (!require(CDR)){
  if (!require(remotes)) {install.packages("remotes")}
  remotes::install_github("cdr-book/CDR")
  }
```

Accidentes de tráfico en la Ciudad de Madrid registrados por Policía Municipal con víctimas y/o daños al patrimonio en el 2020. Los datos se han descargado del [Portal de datos abiertos del Ayuntamiento de Madrid.](https://datos.madrid.es/portal/site/egob/menuitem.c05c1f754a33a9fbe4b2e4b284f1a5a0/?vgnextoid=7c2843010d9c3610VgnVCM2000001f4a900aRCRD&vgnextchannel=374512b9ace9f310VgnVCM100000171f5a0aRCRD&vgnextfmt=default))
:::

# Almeida quiere saber cómo y dónde se producen los accidentes en Madrid

Esta mañana estaba tan tranquilo en mi oficina (trabajo en el distrito de Chamartín para el Ayuntamiento) y me sueltan sin anestesia: "el jefe quiere verte". Lo primero que he pensado es que me echaban, como soy un poco "cansa almas"... Pero no, entro en el despacho del jefe... ¡Y allí está Almeida! Que ha oído que he hecho un curso de visualización en la UCLM y me he convertido en un crack de la visualización. Yo no sabía donde meterme, pero he mantenido perfectamente la compostura, como un profesional.

Así que ya me ha ido contando que está muy preocupado con los accidentes y quiere analizar el tema, para buscar soluciones. Que me agradecería mucho si le explicamos dónde está el problema, para bajar el número y gravedad de los accidentes en la ciudad.

# Entender el contexto

::: {.callout-tip}

## Cómo definir el propósito y la audiencia de tu análisis

¿Qué le interesa al alcalde? Bajar la tasa de accidentes. Pero desde el punto de vista de la visualización, está claro que va a necesitar información georreferenciada, por lo que haremos mapas.

En cualquier caso, lo primero es hacer un análisis exploratorio para ver si hay algo raro en los datos y analizar mínimamente las variables de interés. Y después, le vamos a preparar los gráficos necesarios para **aportarle conocimiento** sobre los accidentes en la ciudad.
:::

```{r}
#| code-summary: Configuración inicial y datos

library(CDR)
library(tidyverse)
library(sf)
library(mapSpain)
library(data.table)
library(gplots)
library(RColorBrewer)
library(leaflet)
library(leaflet.extras)
library(ggmosaic)
```

# Importancia del contexto. 

::: {#exr-1}
¿Dónde se han producido los accidentes de tráfico en Madrid en el 2020?
:::

```{r}

ggplot(data = accidentes2020_data,
       aes(x = coordenada_x_utm, y = coordenada_y_utm)) + 
  geom_point() +
  coord_fixed()
```

No tenemos información, solo unos datos represenados en un gráfico.

# Elección de un gráfico efectivo

```{r}
accidentes2020_sf <- st_as_sf(accidentes2020_data,
  coords = c("coordenada_x_utm", "coordenada_y_utm"),
  crs = 25830 # proyección ETRS89/ UTM zone 30N. Área de uso: Europa  
  )  


madrid <- esp_get_munic(munic = "^Madrid$") |>
  st_transform(25830) 

# descarga imagen de un de mapa estático de las carreteas de Madrid
tile <- esp_getTiles(madrid, "IDErioja", zoommin = 2)  

ggplot() +
  tidyterra::geom_spatraster_rgb(data = tile) +
  geom_sf(data = accidentes2020_sf, 
    col = "blue", size = 0.1, alpha = 0.3) +
  coord_sf(expand = FALSE)
```


# El desorden es tu enemigo.  

::: {#exr-1}

¿Cuándo se han producido los accidentes? 
:::

```{r}
ggplot(data = accidentes2020_data,
       aes(x = fecha, y = hora)) + 
  geom_point() +
  theme_minimal()
```

# agrupar por hora y día de la semana para ver si hay un patrón ??
```{r}
# Convertir la columna 'fecha' a formato Date
accidentes2020_data[, fecha := as.Date(fecha, format = "%d/%m/%Y")]
```



::: {#exr-1}
¿De qué tipo son? 
:::

```{r}
accidentes2020_data <- accidentes2020_data |>
  mutate_if(is.character, as.factor)

accidentes2020_data |>
  count(tipo_accidente) |>
  mutate(porcentaje = 100 * n / sum(n))
```


```{r}
accidentes2020_data |>
  ggplot() +
  geom_bar(aes(y=tipo_accidente), fill = "pink")+
  theme_bw()
```

::: {#exr-1}
¿Existe asociación entre el sexo y el tipo de persona (conductor, pasajero, peaton) que sufre el accidente?
:::

```{r}

# accidentes2020_data_sin_na <- accidentes2020_data |>
#  na.omit()
  
balloonplot(table(accidentes2020_data$sexo , accidentes2020_data$tipo_persona))
```

::: {#exr-1}

¿Existe asociación entre el sexo y el tipo de accidente?
:::


```{r}

accidentes2020_data |>
ggplot() +
  geom_mosaic(aes(x = product(tipo_accidente, sexo), 
                  fill=sexo)) 
```

```{r}
niveles <- levels(factor(accidentes2020_data$tipo_accidente))
etiquetas <- set_names(str_wrap(niveles, width = 20), 
                       niveles)
accidentes2020_data  |>
  ggplot(aes(sexo, fill = estado_meteorológico)) +
  facet_wrap(vars(tipo_accidente), 
             labeller = as_labeller(etiquetas)) +
  geom_bar() +
  labs(fill = "Estado Meteorológico") +
  theme(axis.text.x  = element_text(angle = 90)) +
  theme_minimal()
```



# Centra la atención de tu audiencia.  

```{r}
# con la librería leflet podemos crear un mapa interactivo


utm_crs <- "+proj=utm +zone=30 +datum=WGS84 +units=m +no_defs"
accidentes_sf <- st_as_sf(accidentes2020_data, 
                          coords = c("coordenada_x_utm", "coordenada_y_utm"), crs = utm_crs)
accidentes_sf <- st_transform(accidentes_sf, crs = 4326)
accidentes2020_data$longitude <- st_coordinates(accidentes_sf)[, 1]
accidentes2020_data$latitude <- st_coordinates(accidentes_sf)[, 2]


leaflet(data = accidentes2020_data) %>%
  addTiles() %>%
  addCircleMarkers(lng = ~longitude, lat = ~latitude, 
                   radius = 2, color = "red", opacity = 0.5) %>%
  addProviderTiles(providers$Esri.WorldImagery)

```


```{r}


accidentes2020_sf <- st_transform(accidentes2020_sf, crs = 4326)
accidentes2020_data$longitude <- st_coordinates(accidentes2020_sf)[, 1]
accidentes2020_data$latitude <- st_coordinates(accidentes2020_sf)[, 2]


leaflet(data = accidentes2020_data) %>%
  addTiles() %>%
  addCircleMarkers(lng = ~longitude, lat = ~latitude, 
                   radius = 1, color = "red", opacity = 0.5)  
#  addProviderTiles(providers$Esri.WorldImagery)
```


# Piensa como un diseñador. 

```{r}
leaflet(data = accidentes2020_data) %>%
  addTiles() %>%
  addCircleMarkers(lng = ~longitude, lat = ~latitude, 
                   radius = 2, color = "red", opacity = 0.5, clusterOptions = markerClusterOptions())

```


```{r}
# ahora haz un mapa de calor
leaflet(data = accidentes2020_data) %>%
  addTiles() %>%
  addHeatmap(lng = ~longitude, lat = ~latitude, blur = 20, max = 0.05)

```






::: {#exr-1}

¿Dónde se registraron los accidentes el día de la declaración del Estado de Alarma en Madrid?
:::

```{r}


# Convertir la columna 'fecha' a formato Date
accidentes2020_data[, fecha := as.Date(fecha, format = "%d/%m/%Y")]

# Definir el rango de fechas del estado de alarma
fecha_inicio <- as.Date("2020-03-14")
fecha_fin <- as.Date("2020-03-14")

# Filtrar el dataset por el rango de fechas
estado_alarma_data <- accidentes2020_data[fecha >= fecha_inicio & fecha <= fecha_fin]

# Crear un mapa con los accidentes
leaflet(data = estado_alarma_data) %>%
  addTiles() %>%
  addCircleMarkers(lng = ~longitude, lat = ~latitude, 
                   radius = 3, color = "red", opacity = 0.5)  
```



# Cuenta la historia de tus datos. El arco narrativo.
