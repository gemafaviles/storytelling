---
title: "Storytelling visual con R. Lab 2 con Starwars ‚öî"
subtitle: "Curso formativo para el PDI. Universidad de Castilla-La Mancha"
author:   
  - name: Gema Fern√°ndez-Avil√©s 
    email: gema.faviles@uclm.es
  - name: Isidro Hidalgo
    email: isidro.hidalgo@uclm.es 
date: "`r Sys.Date()`"
format:
  html:
    theme: cerulean
    highlight-style: ayu-mirage
    self-contained: true
    lang: es
    date-format: long
    embed-resources: true
    toc-title: Summary
    toc: true
    number-sections: true
    preview-links: auto
    code-link: true
number-sections: true
execute:
  echo: true
  eval: true
  output: true
  include: true
  freeze: auto
  fig-height: 5
  warning: false
  comment: "#>"
  code-line-numbers: true
  code-copy: true
  code-overflow: scroll
---



::: {.callout-warning}
## IMPORTANTE

üìï **Como buen estudiante que eres, sabr√°s lo importante que es trabajar de forma aut√≥noma y venir a clase con el material le√≠do üòä**. 

ü¶Ñ <mark> Este icono indica **AVANZADO E IMPORTANTE**</mark>

:::


**Paso (i):** Lectura de paquetes

```{r}
library(ggplot2)    # Visualizaci√≥n de datos
library(dplyr)      # Manipulaci√≥n de datos
library(ggpmisc)    # A√±ade la linea de regresi√≥n en el plot
```


**Paso (ii):** Lectura y visualizaci√≥n de los datos 

```{r}
head(starwars)
```

**Paso (iii)** Punto de partida

```{r starwars2-10}
ggplot(data = starwars,
       mapping = aes(x = height,
                     y = mass,
                     colour = gender)) +
  geom_point() +
  labs(title = "Mass vs. height of Starwars characters",
       x = "Height (cm)", 
       y = "Weight (kg)",
       colour = "Gender")  
```


::: {.callout-warning title="Tu turno"}
## Tu turno

Completa las partes del c√≥digo se√±aladas por `_____` o `xxxxx` para obtener el resultado deseado y acu√©rdate de cambiar `eval: false` por `eval: true` cuando lo hayas cumplimentado para que se ejecute correctamente la chunk.
:::



# Unidad 4. üòî El desorden es tu enemigo

Para evitar el desorden, podemos simplificar la visualizaci√≥n eliminando elementos innecesarios y enfoc√°ndonos en lo esencial. ¬øSon necesarios los `NA` en este caso? ¬øEl fondo gris aporta informaci√≥n?

**Paso 1** Elimino los datos faltantes, NA (Not Avaliable) con la funci√≥n `is.na()`, indicando que filtre los que son distintos a NA (con el operador `!`). Guardo el nuevo conjunot de datos en el objeto `starwars_clean`.
```{r}
starwars_clean <- starwars |>
  filter(!is.na(gender))
```

**Paso 2** Compruebo que no tengo `NAs` con la funci√≥n `is.na()`.
```{r}
summary(is.na(starwars_clean))
```

**Paso 3** Cambio el tema del fondo del gr√°fico. Prueba algunos y elige el que consideres m√°s apropiado: `theme_bw()`, `theme_minimal()`, `theme_light()`, `theme_dark()`,...


```{r}
#| eval: false
ggplot(data = starwars_clean,
       mapping = aes(x = height, 
                     y = mass, 
                     colour = gender)) +
  geom_point() +
  labs(title = "Mass vs. Height of Starwars Characters",
       x = "Height (cm)", y = "Weight (kg)",
       colour = "Gender") +
  theme_xxx()
```




# Unidad 5. üõë Centra la atenci√≥n de tu audiencia

Para centrar la atenci√≥n, podemos analizar ciertos puntos de inter√©s, como los personajes con alturas y pesos extremos.

**Paso 1** Centro la atenci√≥n en el personaje *outlier* para ver qui√©n es. Para ello filtro (`filter()`) los valores de la variable `mass > 1000` e indico que ponga una etiqueta con la variable `label = name` .

```{r}
#| eval: false
ggplot(starwars_clean |> 
         filter(_____ > ____), 
       aes(x = ___, 
           y = ___, 
           label = ____, 
           colour = ____)) +
  geom_point() +
  geom_text(hjust = 1.1, vjust = 1.1, size = 3) +
  labs(title = "Characters with Mass Greater than 1000",
       x = "Height (cm)", 
       y = "Weight (kg)",
       colour = "Gender") +
  theme_bw() 
```


**Paso 2** Determinamos el conjunto de datos objetivo. En este caso, eliminamos el personaje *outlier*, `Jabba Desilijic Tiure`, del conjunto de datos `starwars_clean` y lo guardamos en el objeto `starwars_clean_sin_outlier`.
```{r}
starwars_clean_sin_outlier <- starwars_clean |>
      filter(name != "Jabba Desilijic Tiure")
```


**Paso 3** Representamos el diagrama de dispersi√≥n del conjunto de datos `starwars_clean_sin_outlier`.

```{r}
#| eval: false
ggplot(starwars_clean_sin_outlier,
       mapping = aes(x = height, 
                     y = mass, 
                     colour = gender)) +
  geom_point() +
  labs(title = "Mass vs. Height of Starwars Characters (Excluding Jabba)",
       x = "Height (cm)", y = "Weight (kg)",
       colour = "Gender") +
    theme_bw()
```


# Unidad 6. üé® Piensa como un dise√±ador

Para pensar como un dise√±ador, podemos usar colores y formas que hagan la visualizaci√≥n m√°s atractiva y f√°cil de entender.

**Paso 1** A√±ade colores y formas al gr√°fico, adem√°s de la fuente de los datos.

```{r}
#| eval: false
ggplot(starwars_clean_sin_outlier, 
       mapping = aes(x = height, 
                     y = mass, 
                     colour = gender, 
                     ______ = gender)) +
  geom_point(size = 3) +
  labs(title = "Mass vs. Height of Starwars Characters",
       x = "Height (cm)", 
       y = "Weight (kg)",
       colour = "Gender", 
       ______ = "Gender",
       caption = "Source: dplyr package") +
  theme_minimal() +
  scale_colour_viridis_d() +
  theme(legend.position = "bottom")
```




# Unidad 7. üìñ Cuenta una historia

Para contar una historia, podemos agregar anotaciones que expliquen los datos y gu√≠en al espectador a trav√©s de la visualizaci√≥n.


**Paso 1** Destaca los personajes m√°s importantes y cambia la escala de color.
```{r}
#| eval: true
ggplot(starwars_clean_sin_outlier, 
       mapping = aes(x = height, 
                     y = mass, 
                     colour = gender)) +
  geom_point(size = 3) +
  geom_text(aes(label = ifelse(name %in% c("Darth Vader", "Luke Skywalker", "Leia Organa", "Yoda"), 
                               name, " ")),  
            size = 5) +
  labs(title = "Mass vs. Height of Starwars Characters",
       subtitle = "Highlighting Key Characters",
       x = "Height (cm)", y = "Weight (kg)",
       colour = "Gender",
       caption = "Source: dplyr package") +
  theme_minimal() +
scale_colour_brewer(palette = "Set2")
```



**Paso 2** A√±ade una linea de regresi√≥n con sus coeficientes y el R2.
```{r}
#| eval: true
ggplot(starwars_clean_sin_outlier, 
       mapping = aes(x = height, 
                     y = mass, 
                     colour = gender)) +
  geom_point(size = 3) +
  geom_smooth(method = "lm", se = FALSE, aes(colour = gender)) +  # L√≠nea de regresi√≥n por g√©nero
  stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~"), 
                   colour = gender), 
               formula = y ~ x, 
               parse = TRUE, label.x.npc = "right", label.y.npc = "top") +
  labs(title = "Mass vs. Height of Starwars Characters",
       x = "Height (cm)", y = "Weight (kg)",
       colour = "Gender",
       caption = "Source: dplyr package") +
  theme_minimal() +
  scale_colour_brewer(palette = "Set2") +
  theme(legend.position = "bottom")
```

![](img/logos_finan.png){align="right"}
