---
title: "¬øQu√© pasa con la renta municipal en Espa√±a?"
author:
  - name: Nombre y apellidos
    email: mail
  - name: Nombre y apellidos
    email: mail
  - si hay m√°s autores...
format:
  html:
    theme: cerulean
    highlight-style: ayu-mirage
    self-contained: true
    lang: es
    logo: img/logos_finan.png
    date: 04/25/2025
    date-format: long
    embed-resources: true
    toc-title: Summary
    toc: true
    number-sections: true
    preview-links: auto
    code-link: true
    code-fold: false
number-sections: true
execute:
  echo: false
  eval: true
  output: true
  include: true
  freeze: auto
  fig-height: 5
  warning: false
  comment: "#>"
  code-line-numbers: true
  code-copy: true
  code-overflow: scroll
  code-fold: true
---



# Planteamiento

Trabajas en una compa√±√≠a privada que planea lanzar un producto de alta gama. Tu jefe te ha solicitado un informe sobre la renta municipal en Espa√±a de los √∫ltimos a√±os, ya que el CEO quiere expandir el mercado a ciertos segmentos de renta alta y necesita identificar √°reas con potencial de negocio.

Tu objetivo es encontrar segmentos de mercado con capacidad adquisitiva para un producto de alta gama, por lo que es crucial analizar la variable renta e identificar d√≥nde reside la poblaci√≥n con mayores ingresos.

## Los datos

Trabajaremos con la **renta neta per c√°pita (en euros) por municipios**. Esta informaci√≥n proviene del *Atlas de distribuci√≥n de renta de los hogares* del Instituto Nacional de Estad√≠stica y ha sido procesada para facilitar su an√°lisis. Los datos se cargar√°n desde el archivo Excel `tarea2_renta.xlsx`.

Se ha realizado un an√°lisis exploratorio inicial para limpiar los datos y analizar las variables de inter√©s. 

La descripci√≥n de las variables de renta es la siguiente: contamos con 6.424 registros de renta municipal de toda Espa√±a, abarcando un per√≠odo de 5 a√±os, desde 2015 hasta 2019, con cada a√±o representado en una columna. Al analizar la media y las cinco medidas de posici√≥n de las variables cuantitativas, detectamos una asimetr√≠a positiva, lo cual es com√∫n en distribuciones de rentas o salariales.

Adem√°s, se trabajar√° con un **objeto espacial**, `municipios`, que contiene la geometr√≠a de los municipios espa√±oles. Este objeto est√° disponible en la librer√≠a `CDR`.

## Objetivo

Tu tarea consiste en **contar una historia** con la informaci√≥n que obtengas de estos datos, mejorar los gr√°ficos incluidos en este archivo de Quarto y crear otros nuevos para presentar la informaci√≥n al jefe **de la manera m√°s visual posible**. El resultado final debe ser claro y conciso. Elimina todo aquello que no sea necesario para el informe final (enunciados de ejercicios, comentarios, etc).





# üÜò ¬°No te preocupes! Te iremos guiando a lo largo del proceso üÜò


```{r bibliotecas}
#| code-summary: Carga de bibliotecas
#| echo: false

library(CDR)            # datos auxiliares para cartograf√≠a (municipios)
library(readxl)         # carga de datos desde Excel
library(tidyverse)      # manipulaci√≥n de datos
library(sf)             # manejo de datos espaciales
library(patchwork)      # combinaci√≥n de gr√°ficos
library(corrplot)       # matriz de correlaciones
```


```{r datos}
#| code-summary: Carga de los datos
#| echo: false

renta <- as.data.frame(read_xlsx("./data/tarea2_renta.xlsx")) # Deber√°s especificar la ruta donde hayas guardado el archivo.
```



```{r resumen}
#| code-summary: Visualizaci√≥n previa y resumen de los datos (media y 5 n√∫meros para variables cuantitativas)
#| eval: false
#| echo: false # En un informe no deber√≠an aparecer, pero internamente siempre debemos "verle las tripas" a nuestros datos

head(renta)
str(renta)
summary(renta)
```


::: {#exr-1}
## üë®‚Äçüíª ¬øPuedes mejorar este histograma?

Modifica el siguiente chunk de c√≥digo, reemplazando las partes se√±aladas por `_____` o `xxxxx` para obtener el resultado propuesto.
:::


```{r histograma-2019}
#| code-summary: Creaci√≥n del histograma

ggplot(data = renta, aes(x = anyo2019)) +
  geom_histogram() #30 bins por defecto
```




```{r histograma-tarea}
#| code-summary: Creaci√≥n del histograma, tu turno.
#| eval: false # Una vez que hayas corregido el c√≥digo, traslada esta l√≠nea al chunk llamado "histograma-2019" para que se muestre tu histograma mejorado en el informe en lugar del histograma del chunk "histograma-2019". Si lo consideras interesante, puedes realizar los cambios que desees y ajustarlo a tu gusto.

p_renta_2019 <- ggplot(renta, aes(anyo2019)) +
  geom_xxxxxx(col = color_relleno,
                 fill = color_relleno, 
                 bins = nclass.Sturges(renta$anyo2019)) +
  geom_xxxxxx(aes(xintercept = mean(anyo2019)),
             color = color_lineas,
             linetype = "dashed",
             linewidth = 1) +
  geom_xxxxxx(aes(x = mean(anyo2019),
                y = 100,
                label = round(mean(anyo2019), 2)),
            color = color_lineas) +
  labs(title = "Distribuci√≥n de la renta por municipios",
       x = "Renta per c√°pita",
       y = "Frecuencia") +
  theme_xxxxxx()

p_renta_2019 
```


::: {#exr-2}
## üë®‚Äçüíª Funci√≥n de densidad de la renta del a√±o 2019

Como visualizaci√≥n alternativa se presenta igualmente la funci√≥n de densidad de la renta. Tendr√°s que usar la funci√≥n `geom_density()` dentro de un gr√°fico de ggplot, habiendo elegido previamente las variables adecuadas en el argumento `mapping = aes()` de la funci√≥n `ggplot()`.
:::


```{r ejercicio2-tu-turno}
#| code-summary: Pon aqu√≠ tu c√≥digo para el ejercicio 2


```



::: {#exr-3}
## üë®‚Äçüíª Diagrama de cajas y de viol√≠n de la renta del a√±o 2019

Deber√°s utilizar las funciones `geom_boxplot()` y `geom_violin()` dentro de un gr√°fico de `ggplot()`, eligiendo previamente las variables adecuadas en el argumento `mapping = aes()`. 

Asigna el gr√°fico a un objeto (por ejemplo, ll√°malo `graf`). Luego, crea dos objetos usando un c√≥digo similar a este: `caja <- graf + geom_boxplot()` y `violin <- graf + geom_violin()`. 
Finalmente, presenta ambos gr√°ficos juntos usando `caja + violin` en una sola l√≠nea, para que el paquete `patchwork` haga su magia. 

La estructura del c√≥digo ser√≠a la siguiente:

+ `graf <- ggplot()`
+ `caja <- graf + ggplot()`
+ `violin <-  graf + ggplot()`
+ `caja + violin`
:::
 

```{r ejercicio3-tu-turno}
#| code-summary: pon aqu√≠ tu c√≥digo para el ejercicio 3

```


::: {#exr-4}
## üë®‚Äçüíª Evoluci√≥n temporal de la renta neta municipal

Deber√°s utilizar la funci√≥n `geom_line()` dentro de un gr√°fico de ggplot, eligiendo previamente las variables adecuadas en el argumento `mapping = aes()` de la funci√≥n `ggplot()`. Para facilitarte las cosas, ya hemos calculado la mediana de cada a√±o y hemos creado un `data frame` llamado `medianas`, con el cual podr√°s construir f√°cilmente el gr√°fico requerido. Aunque este gr√°fico es sencillo, no te conformes con un gr√°fico sin sustancia. Usa el color con elegancia, a√±ade etiquetas en los ejes, un t√≠tulo impactante... todo lo que ya sabes hacer para mejorar la presentaci√≥n.

:::

```{r ejercicio4-tu-turno}
#| code-summary: Pon a continuaci√≥n de este c√≥digo lo que necesites para completar el ejercicio 4

valor_medianas <- apply(renta[,2:6], 2, median)
medianas <- data.frame(anyo = 2015:2019, mediana = valor_medianas[5:1]) # le damos la vuelta a los valores de las medianas porque las columnas del objeto "renta" est√°n en orden decreciente

```


::: {.callout-note}
## IMPORTANTE

Es evidente que existe una fuerte relaci√≥n entre la renta de todos los a√±os. Sin embargo, quer√≠amos incluir este tipo de gr√°fico y la matriz de correlaci√≥n en el ejercicio, ya que son muy comunes en nuestro √°mbito de trabajo (docente, cient√≠fico y divulgativo).
:::


::: {#exr-5}
## üë®‚Äçüíª Gr√°ficos de correlaci√≥n

Deber√°s utilizar la funci√≥n `geom_point()` y, si lo consideras interesante, puedes completar el gr√°fico con `geom_smooth()`, que a√±adir√° una l√≠nea de tendencia con el intervalo de confianza integrado en la curva.
:::


```{r ejercicio5-tu-turno}
#| code-summary: pon aqu√≠ tu c√≥digo para el ejercicio 5


```


::: {#exr-6}
## üë®‚Äçüíª Matriz de correlaci√≥n

Una matriz de correlaci√≥n es extremadamente √∫til, especialmente cuando se trabaja con muchas variables, ya que permite identificar relaciones entre las variables explicativas. Esto puede ayudar a descartar algunas variables, reducir la dimensionalidad del problema y mejorar el rendimiento del modelo.

Te recomendamos utilizar la funci√≥n `corrplot()` del paquete del mismo nombre, `corrplot`. Selecciona una configuraci√≥n que se ajuste a tu estilo, ya que el paquete ofrece una amplia variedad de visualizaciones. Para obtener m√°s informaci√≥n sobre las opciones disponibles, consulta la ayuda de la funci√≥n ejecutando: `?corrplot`.
:::

::: {.callout-note}
## CUIDADO
Aunque es evidente, recuerda utilizar solo variables cuantitativas
:::

```{r ejercicio6-tu-turno}
#| code-summary: pon aqu√≠ tu c√≥digo para el ejercicio 6


```


```{r dataset}
#| code-summary: Uni√≥n de los datos de renta (`renta`) con la capa geogr√°fica municipal (municipios), obtenida del paquete `CDR`.

renta_municipal <- municipios |>
  left_join(renta) |>   # une datasets
  dplyr::select(name, codigo_ine, anyo2015, anyo2016, anyo2017, anyo2018,
                anyo2019) # selecciona las variables que nos interesan
```

::: {#exr-7}
## üë®‚Äçüíª ¬øC√≥mo modificar√≠as este c√≥digo para mejorar la visualizaci√≥n del mapa b√°sico que hemos incluido?

El gr√°fico incluido tiende a uniformizar los municipios debido a la escala de colores utilizada.

Algunas ideas para mejorar la visualizaci√≥n:

+ Elige una escala adecuada: Considera usar escalas como `viridis` o `inferno`, e investiga si la direcci√≥n de la escala es adecuada. Prueba los tonos en orden inverso para ver cu√°l funciona mejor.
+ A√±ade un t√≠tulo adecuado: Incluye un t√≠tulo descriptivo y, si lo consideras √∫til, un subt√≠tulo que aporte contexto adicional.
+ Estratifica la graduaci√≥n de renta: Esta es una tarea m√°s compleja. Dise√±a una escala discreta para la graduaci√≥n de renta utilizando la funci√≥n `classIntervals()` del paquete `classInt`, aplicando el m√©todo `Fisher-Jenks`.
:::


```{r ejercicio7-tu-turno}
#| code-summary: mejora la visualizaci√≥n de este mapa, cambia en esta chunk el c√≥digo

ggplot(renta_municipal) +
  geom_sf(aes(fill = anyo2019), color = NA) +
  theme_minimal()
```



::: {#exr-8}
## üë®‚Äçüíª ¬øQuienes son los 20 municipios con mayor renta neta en Espa√±a en 2019? Graficos de tipo `lollipop`

Construye un gr√°fico lollipop con la renta por municipios, usando todo lo aprendido en el curso (t√≠tulo, subt√≠tulo, aspectos est√©ticos, simplicidad, elegancia, baja carga cognitiva, eficiencia, etc.)

Los gr√°ficos de tipo `lollipop` pueden ser complejos, pero en ocasiones son muy efectivos, especialmente cuando se integran con otras representaciones.

Para hacerlo correctamente, ten en cuenta lo siguiente:

+ Orden descendente: El municipio con mayor renta debe aparecer en la parte superior, y el resto en orden descendente.
+ Dibujar l√≠neas: Utiliza `geom_segment()`, especificando los valores inicial y final de cada segmento, tanto en `x` como en `y`, para dibujar las l√≠neas.
+ Puntos finales: Usa `geom_point()` para los puntos finales.
+ Ordenar municipios: Para ordenar los municipios por la variable `anyo2019`, utiliza `reorder()` en el mapeo. Esta funci√≥n requiere dos argumentos: el primero es la variable a ordenar (el nombre del municipio) y el segundo es la variable que ordena (la renta de 2019).

:::



```{r mayor-renta}
#| code-summary: Te facilitamos el dataframe de los municipios de mayor renta

municipios_mayor_renta <- renta_municipal |>
  arrange(desc(anyo2019)) |>
  slice(1:20) |>
  dplyr::select(name, anyo2019) |>
  st_drop_geometry()
```




```{r ejercicio8-tu-turno}
#| code-summary: pon aqu√≠ tu c√≥digo para el ejercicio 8


```


